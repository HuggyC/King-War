(()=>{var t,e,i,s,r={5327:(t,e,i)=>{var s={"./AfricaMini.bin":[1668,1668],"./AsiaMini.bin":[3212,3212],"./AustraliaMini.bin":[76,76],"./BaikalMini.bin":[6798,6798],"./BetweenTwoSeasMini.bin":[6652,6652],"./BlackSeaMini.bin":[7284,7284],"./BritanniaMini.bin":[6464,6464],"./DeglaciatedAntarcticaMini.bin":[1239,1239],"./EuropeClassicMini.bin":[5164,5164],"./EuropeMini.bin":[3996,3996],"./FalklandIslandsMini.bin":[1477,1477],"./FaroeIslandsMini.bin":[9509,9509],"./GatewayToTheAtlanticMini.bin":[4872,4872],"./IcelandMini.bin":[7200,7200],"./JapanMini.bin":[6406,6406],"./KnownWorldMini.bin":[4965,4965],"./MarsMini.bin":[2425,2425],"./MenaMini.bin":[4947,4947],"./NorthAmericaMini.bin":[4745,4745],"./OceaniaMini.bin":[357,2738],"./PangaeaMini.bin":[8141,8141],"./SouthAmericaMini.bin":[8883,8883],"./WorldMapMini.bin":[9008,9008]};function r(t){if(!i.o(s,t))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=s[t],r=e[0];return i.e(e[1]).then((()=>i.t(r,23)))}r.keys=()=>Object.keys(s),r.id=5327,t.exports=r},6040:(t,e,i)=>{"use strict";const s="AllPlayers";var r;!function(t){t.Easy="Easy",t.Medium="Medium",t.Hard="Hard",t.Impossible="Impossible"}(r||(r={}));const n="Red",a="Blue",o="Teal",h="Purple",l="Yellow",c="Orange",u="Green",d="Bot";var g,p,m,f,y,w,b,M,v;!function(t){t.World="World",t.Europe="Europe",t.EuropeClassic="Europe Classic",t.Mena="Mena",t.NorthAmerica="North America",t.SouthAmerica="South America",t.Oceania="Oceania",t.BlackSea="Black Sea",t.Africa="Africa",t.Pangaea="Pangaea",t.Asia="Asia",t.Mars="Mars",t.Britannia="Britannia",t.GatewayToTheAtlantic="Gateway to the Atlantic",t.Australia="Australia",t.Iceland="Iceland",t.Japan="Japan",t.BetweenTwoSeas="Between Two Seas",t.KnownWorld="Known World",t.FaroeIslands="Faroe Islands",t.DeglaciatedAntarctica="Deglaciated Antarctica",t.FalklandIslands="Falkland Islands",t.Baikal="Baikal"}(g||(g={})),g.World,g.NorthAmerica,g.SouthAmerica,g.Europe,g.EuropeClassic,g.Asia,g.Africa,g.Oceania,g.BlackSea,g.Britannia,g.GatewayToTheAtlantic,g.BetweenTwoSeas,g.Iceland,g.Japan,g.Mena,g.Australia,g.FaroeIslands,g.FalklandIslands,g.Baikal,g.Pangaea,g.Mars,g.KnownWorld,g.DeglaciatedAntarctica,function(t){t.Singleplayer="Singleplayer",t.Public="Public",t.Private="Private"}(p||(p={})),function(t){t.FFA="Free For All",t.Team="Team"}(m||(m={})),(y=f||(f={})).TransportShip="Transport",y.Warship="Warship",y.Shell="Shell",y.SAMMissile="SAMMissile",y.Port="Port",y.AtomBomb="Atom Bomb",y.HydrogenBomb="Hydrogen Bomb",y.TradeShip="Trade Ship",y.MissileSilo="Missile Silo",y.DefensePost="Defense Post",y.SAMLauncher="SAM Launcher",y.City="City",y.MIRV="MIRV",y.MIRVWarhead="MIRV Warhead",y.Construction="Construction",f.AtomBomb,f.HydrogenBomb,f.MIRVWarhead,f.MIRV,function(t){t[t.Hostile=0]="Hostile",t[t.Distrustful=1]="Distrustful",t[t.Neutral=2]="Neutral",t[t.Friendly=3]="Friendly"}(w||(w={}));class k{constructor(t,e,i){this.spawnCell=t,this.strength=e,this.playerInfo=i}}class S{constructor(t,e){this.x=t,this.y=e,this.strRepr=`Cell[${this.x},${this.y}]`}pos(){return{x:this.x,y:this.y}}toString(){return this.strRepr}}!function(t){t[t.Plains=0]="Plains",t[t.Highland=1]="Highland",t[t.Mountain=2]="Mountain",t[t.Lake=3]="Lake",t[t.Ocean=4]="Ocean"}(b||(b={})),function(t){t.Bot="BOT",t.Human="HUMAN",t.FakeHuman="FAKEHUMAN"}(M||(M={}));class T{constructor(t,e,i,s,r,n){if(this.flag=t,this.name=e,this.playerType=i,this.clientID=s,this.id=r,this.nation=n,e.startsWith("[")&&e.includes("]")){const t=e.match(/^\[([A-Z]{2,5})\]/);this.clan=t?t[1]:null}else this.clan=null}}function _(t,e,i){return Math.min(Math.max(t,e),i)}function I(t,e){const i="number"==typeof e?e:e.tile();return(e,s)=>t.manhattanDist(e.tile(),i)-t.manhattanDist(s.tile(),i)}function D(t){let e=0;for(let i=0;i<t.length;i++)e=(e<<5)-e+t.charCodeAt(i),e|=0;return Math.abs(e)}function A(t,e){let i=1/0,s=1/0,r=-1/0,n=-1/0;return e.forEach((e=>{const a=t.cell(e);i=Math.min(i,a.x),s=Math.min(s,a.y),r=Math.max(r,a.x),n=Math.max(n,a.y)})),{min:new S(i,s),max:new S(r,n)}}function x(t,e){return t.min.x<=e.min.x&&t.min.y<=e.min.y&&t.max.x>=e.max.x&&t.max.y>=e.max.y}function P(t){return Array.from(t).join("").replace(/[^\p{L}\p{N}\s\p{Emoji}\p{Emoji_Component}\[\]_]/gu,"")}function j(t){throw new Error("Unexpected value: "+t)}function C(t){return t===1/0?BigInt(Number.MAX_SAFE_INTEGER):t===-1/0?BigInt(Number.MIN_SAFE_INTEGER):BigInt(Math.floor(t))}function E(t,e){return t>e?t:e}function R(t,e){return t<e?t:e}!function(t){t[t.SUCCESS=0]="SUCCESS",t[t.INFO=1]="INFO",t[t.WARN=2]="WARN",t[t.ERROR=3]="ERROR",t[t.CHAT=4]="CHAT"}(v||(v={})),i(9418),i(8771);const B=[].concat(["😀","😊","🥰","😇","😎"],["😞","🥺","😭","😱","😡"],["😈","🤡","🖕","🥱","🤦‍♂️"],["👋","👏","🤌","💪","🫡"],["👍","👎","❓","🐔","🐀"],["🤝","🆘","🕊️","🏳️","⏳"],["🔥","💥","💀","☢️","⚠️"],["↖️","⬆️","↗️","👑","🥇"],["⬅️","🎯","➡️","🥈","🥉"],["↙️","⬇️","↘️","❤️","💔"],["💰","⚓","⛵","🏡","🛡️"]);function O(t,e){const i=e.largestClusterBoundingBox??A(t,e.borderTiles());let s=1;const r=i.max.x-i.min.x,n=i.max.y-i.min.y,a=Math.min(r,n);s=a<25?1:a<50?2:a<100?4:a<250?8:a<500?16:32;const o=function(t,e,i,s){const r={min:{x:Math.floor(i.min.x/s),y:Math.floor(i.min.y/s)},max:{x:Math.floor(i.max.x/s),y:Math.floor(i.max.y/s)}},n=r.max.x-r.min.x+1,a=r.max.y-r.min.y+1,o=Array(n).fill(null).map((()=>Array(a).fill(!1)));for(let i=r.min.x;i<=r.max.x;i++)for(let n=r.min.y;n<=r.max.y;n++){const a=new S(i*s,n*s);if(t.isOnMap(a)){const s=t.ref(a.x,a.y);o[i-r.min.x][n-r.min.y]=t.isLake(s)||t.owner(s)===e}}return o}(t,e,i,s),h=function(t){const e=t[0].length,i=t.length,s=new Array(i).fill(0);let r={x:0,y:0,width:0,height:0};for(let n=0;n<e;n++){for(let e=0;e<i;e++)t[e][n]?s[e]++:s[e]=0;const e=N(s);e.width*e.height>r.width*r.height&&(r={x:e.x,y:n-e.height+1,width:e.width,height:e.height})}return r}(o);h.x=h.x*s,h.y=h.y*s,h.width=h.width*s,h.height=h.height*s;let l=new S(Math.floor(h.x+h.width/2+i.min.x),Math.floor(h.y+h.height/2+i.min.y));const c=function(t,e){const i=t.width/e.length*2,s=t.height/3;return Math.min(i,s)}(h,e.name());return l=new S(l.x,l.y-c/3),{x:Math.ceil(l.x),y:Math.ceil(l.y),size:c}}function N(t){const e=[];let i=0,s={x:0,y:0,width:0,height:0};for(let r=0;r<=t.length;r++){const n=r===t.length?0:t[r];for(;e.length>0&&n<t[e[e.length-1]];){const n=t[e.pop()],a=0===e.length?r:r-e[e.length-1]-1;n*a>i&&(i=n*a,s={x:0===e.length?0:e[e.length-1]+1,y:0,width:a,height:n})}e.push(r)}return s}const F={log:console.log,warn:console.warn,error:console.error};var q;!function(t){t[t.Dev=0]="Dev",t[t.Preprod=1]="Preprod",t[t.Prod=2]="Prod"}(q||(q={}));var U=i(3640);class ${constructor(t){this.m=2147483648,this.a=1103515245,this.c=12345,this.state0=0|t,this.state1=1848473708,0===this.state0&&(this.state0=1),this.state=t%this.m,this.state<0&&(this.state+=this.m);for(let t=0;t<20;t++)this._nextIntInternal()}_nextIntInternal(){let t=this.state0;const e=this.state1;return this.state0=e,t^=t<<23,t^=t>>>17,t^=e,t^=e>>>26,this.state1=t,this.state0+this.state1|0}next(){const t=this._nextIntInternal()>>>0;return this.state=t%this.m,this.state/this.m}nextInt(t,e){return Math.floor(this.next()*(e-t)+t)}nextFloat(t,e){return this.next()*(e-t)+t}nextID(){return this.nextInt(0,Math.pow(36,8)).toString(36).padStart(8,"0")}randElement(t){if(0==t.length)throw new Error("array must not be empty");return t[this.nextInt(0,t.length)]}chance(t){return 0==this.nextInt(0,t)}shuffleArray(t){const e=[...t];for(let t=e.length-1;t>=0;t--){const i=this.nextInt(0,t+1);[e[t],e[i]]=[e[i],e[t]]}return e}}const W=(0,U.Mj)({r:235,g:53,b:53}),H=(0,U.Mj)({r:41,g:98,b:255}),L=(0,U.Mj)({h:172,s:66,l:50}),G=(0,U.Mj)({h:271,s:81,l:56}),V=(0,U.Mj)({h:45,s:93,l:47}),K=(0,U.Mj)({h:25,s:95,l:53}),z=(0,U.Mj)({h:128,s:49,l:50}),Y=(0,U.Mj)({r:210,g:206,b:200}),X=[(0,U.Mj)({r:230,g:100,b:100}),(0,U.Mj)({r:100,g:180,b:230}),(0,U.Mj)({r:230,g:180,b:80}),(0,U.Mj)({r:180,g:100,b:230}),(0,U.Mj)({r:80,g:200,b:120}),(0,U.Mj)({r:230,g:130,b:180}),(0,U.Mj)({r:100,g:160,b:80}),(0,U.Mj)({r:230,g:150,b:100}),(0,U.Mj)({r:80,g:130,b:190}),(0,U.Mj)({r:210,g:210,b:100}),(0,U.Mj)({r:190,g:100,b:130}),(0,U.Mj)({r:100,g:210,b:210}),(0,U.Mj)({r:210,g:140,b:80}),(0,U.Mj)({r:150,g:110,b:190}),(0,U.Mj)({r:180,g:210,b:120}),(0,U.Mj)({r:210,g:100,b:160}),(0,U.Mj)({r:100,g:140,b:110}),(0,U.Mj)({r:230,g:180,b:180}),(0,U.Mj)({r:120,g:120,b:190}),(0,U.Mj)({r:190,g:170,b:100}),(0,U.Mj)({r:100,g:180,b:160}),(0,U.Mj)({r:210,g:160,b:200}),(0,U.Mj)({r:170,g:190,b:100}),(0,U.Mj)({r:100,g:130,b:150}),(0,U.Mj)({r:230,g:140,b:140}),(0,U.Mj)({r:140,g:180,b:220}),(0,U.Mj)({r:200,g:160,b:110}),(0,U.Mj)({r:180,g:130,b:180}),(0,U.Mj)({r:130,g:200,b:130}),(0,U.Mj)({r:220,g:120,b:120}),(0,U.Mj)({r:120,g:160,b:200}),(0,U.Mj)({r:200,g:200,b:140}),(0,U.Mj)({r:160,g:120,b:160}),(0,U.Mj)({r:140,g:180,b:140}),(0,U.Mj)({r:200,g:130,b:110}),(0,U.Mj)({r:130,g:170,b:190}),(0,U.Mj)({r:190,g:180,b:160}),(0,U.Mj)({r:170,g:140,b:190}),(0,U.Mj)({r:160,g:190,b:160}),(0,U.Mj)({r:190,g:150,b:130}),(0,U.Mj)({r:140,g:150,b:180}),(0,U.Mj)({r:180,g:170,b:140}),(0,U.Mj)({r:150,g:130,b:150}),(0,U.Mj)({r:170,g:190,b:180}),(0,U.Mj)({r:190,g:140,b:150}),(0,U.Mj)({r:130,g:180,b:170}),(0,U.Mj)({r:180,g:160,b:180}),(0,U.Mj)({r:160,g:180,b:140}),(0,U.Mj)({r:170,g:150,b:170}),(0,U.Mj)({r:100,g:180,b:230}),(0,U.Mj)({r:230,g:180,b:80}),(0,U.Mj)({r:180,g:100,b:230}),(0,U.Mj)({r:80,g:200,b:120}),(0,U.Mj)({r:230,g:130,b:180}),(0,U.Mj)({r:100,g:160,b:80}),(0,U.Mj)({r:230,g:150,b:100}),(0,U.Mj)({r:80,g:130,b:190}),(0,U.Mj)({r:210,g:210,b:100}),(0,U.Mj)({r:190,g:100,b:130}),(0,U.Mj)({r:100,g:210,b:210}),(0,U.Mj)({r:210,g:140,b:80}),(0,U.Mj)({r:150,g:110,b:190}),(0,U.Mj)({r:180,g:210,b:120}),(0,U.Mj)({r:210,g:100,b:160}),(0,U.Mj)({r:100,g:140,b:110}),(0,U.Mj)({r:230,g:180,b:180}),(0,U.Mj)({r:120,g:120,b:190}),(0,U.Mj)({r:190,g:170,b:100}),(0,U.Mj)({r:100,g:180,b:160}),(0,U.Mj)({r:210,g:160,b:200}),(0,U.Mj)({r:170,g:190,b:100}),(0,U.Mj)({r:100,g:130,b:150}),(0,U.Mj)({r:230,g:140,b:140}),(0,U.Mj)({r:140,g:180,b:220}),(0,U.Mj)({r:200,g:160,b:110}),(0,U.Mj)({r:180,g:130,b:180}),(0,U.Mj)({r:130,g:200,b:130}),(0,U.Mj)({r:220,g:120,b:120}),(0,U.Mj)({r:120,g:160,b:200}),(0,U.Mj)({r:200,g:200,b:140}),(0,U.Mj)({r:160,g:120,b:160}),(0,U.Mj)({r:140,g:180,b:140}),(0,U.Mj)({r:200,g:130,b:110}),(0,U.Mj)({r:130,g:170,b:190}),(0,U.Mj)({r:190,g:180,b:160}),(0,U.Mj)({r:170,g:140,b:190}),(0,U.Mj)({r:160,g:190,b:160}),(0,U.Mj)({r:190,g:150,b:130}),(0,U.Mj)({r:140,g:150,b:180}),(0,U.Mj)({r:180,g:170,b:140}),(0,U.Mj)({r:150,g:130,b:150}),(0,U.Mj)({r:170,g:190,b:180}),(0,U.Mj)({r:190,g:140,b:150}),(0,U.Mj)({r:130,g:180,b:170}),(0,U.Mj)({r:180,g:160,b:180}),(0,U.Mj)({r:160,g:180,b:140}),(0,U.Mj)({r:170,g:150,b:170})],J=[(0,U.Mj)({r:235,g:75,b:75}),(0,U.Mj)({r:67,g:190,b:84}),(0,U.Mj)({r:59,g:130,b:246}),(0,U.Mj)({r:245,g:158,b:11}),(0,U.Mj)({r:236,g:72,b:153}),(0,U.Mj)({r:48,g:178,b:180}),(0,U.Mj)({r:168,g:85,b:247}),(0,U.Mj)({r:251,g:191,b:36}),(0,U.Mj)({r:74,g:222,b:128}),(0,U.Mj)({r:239,g:68,b:68}),(0,U.Mj)({r:34,g:197,b:94}),(0,U.Mj)({r:96,g:165,b:250}),(0,U.Mj)({r:249,g:115,b:22}),(0,U.Mj)({r:192,g:132,b:252}),(0,U.Mj)({r:45,g:212,b:191}),(0,U.Mj)({r:244,g:114,b:182}),(0,U.Mj)({r:132,g:204,b:22}),(0,U.Mj)({r:56,g:189,b:248}),(0,U.Mj)({r:234,g:179,b:8}),(0,U.Mj)({r:217,g:70,b:239}),(0,U.Mj)({r:16,g:185,b:129}),(0,U.Mj)({r:251,g:146,b:60}),(0,U.Mj)({r:147,g:51,b:234}),(0,U.Mj)({r:79,g:70,b:229}),(0,U.Mj)({r:245,g:101,b:101}),(0,U.Mj)({r:134,g:239,b:172}),(0,U.Mj)({r:59,g:130,b:246}),(0,U.Mj)({r:253,g:164,b:175}),(0,U.Mj)({r:147,g:197,b:253}),(0,U.Mj)({r:252,g:211,b:77}),(0,U.Mj)({r:190,g:92,b:251}),(0,U.Mj)({r:82,g:183,b:136}),(0,U.Mj)({r:248,g:113,b:113}),(0,U.Mj)({r:99,g:202,b:253}),(0,U.Mj)({r:240,g:171,b:252}),(0,U.Mj)({r:163,g:230,b:53}),(0,U.Mj)({r:234,g:88,b:12}),(0,U.Mj)({r:125,g:211,b:252}),(0,U.Mj)({r:251,g:113,b:133}),(0,U.Mj)({r:52,g:211,b:153}),(0,U.Mj)({r:167,g:139,b:250}),(0,U.Mj)({r:245,g:158,b:11}),(0,U.Mj)({r:110,g:231,b:183}),(0,U.Mj)({r:233,g:213,b:255}),(0,U.Mj)({r:202,g:138,b:4}),(0,U.Mj)({r:151,g:255,b:187}),(0,U.Mj)({r:220,g:38,b:38}),(0,U.Mj)({r:124,g:58,b:237}),(0,U.Mj)({r:45,g:212,b:191}),(0,U.Mj)({r:252,g:165,b:165}),(0,U.Mj)({r:179,g:136,b:255}),(0,U.Mj)({r:133,g:77,b:14}),(0,U.Mj)({r:52,g:211,b:153}),(0,U.Mj)({r:234,g:179,b:8}),(0,U.Mj)({r:236,g:72,b:153}),(0,U.Mj)({r:147,g:197,b:253}),(0,U.Mj)({r:249,g:115,b:22}),(0,U.Mj)({r:167,g:139,b:250}),(0,U.Mj)({r:16,g:185,b:129}),(0,U.Mj)({r:251,g:146,b:60}),(0,U.Mj)({r:192,g:132,b:252}),(0,U.Mj)({r:79,g:70,b:229}),(0,U.Mj)({r:245,g:101,b:101}),(0,U.Mj)({r:134,g:239,b:172}),(0,U.Mj)({r:59,g:130,b:246}),(0,U.Mj)({r:253,g:164,b:175}),(0,U.Mj)({r:16,g:185,b:129}),(0,U.Mj)({r:252,g:211,b:77}),(0,U.Mj)({r:190,g:92,b:251}),(0,U.Mj)({r:82,g:183,b:136}),(0,U.Mj)({r:248,g:113,b:113}),(0,U.Mj)({r:99,g:202,b:253}),(0,U.Mj)({r:240,g:171,b:252}),(0,U.Mj)({r:163,g:230,b:53}),(0,U.Mj)({r:234,g:88,b:12}),(0,U.Mj)({r:125,g:211,b:252}),(0,U.Mj)({r:251,g:113,b:133}),(0,U.Mj)({r:52,g:211,b:153}),(0,U.Mj)({r:167,g:139,b:250}),(0,U.Mj)({r:245,g:158,b:11}),(0,U.Mj)({r:110,g:231,b:183}),(0,U.Mj)({r:233,g:213,b:255}),(0,U.Mj)({r:202,g:138,b:4}),(0,U.Mj)({r:151,g:255,b:187}),(0,U.Mj)({r:220,g:38,b:38}),(0,U.Mj)({r:124,g:58,b:237}),(0,U.Mj)({r:45,g:212,b:191}),(0,U.Mj)({r:252,g:165,b:165}),(0,U.Mj)({r:168,g:85,b:247}),(0,U.Mj)({r:74,g:222,b:128}),(0,U.Mj)({r:239,g:68,b:68}),(0,U.Mj)({r:34,g:197,b:94}),(0,U.Mj)({r:96,g:165,b:250}),(0,U.Mj)({r:249,g:115,b:22}),(0,U.Mj)({r:192,g:132,b:252}),(0,U.Mj)({r:45,g:212,b:191}),(0,U.Mj)({r:244,g:114,b:182}),(0,U.Mj)({r:132,g:204,b:22}),(0,U.Mj)({r:56,g:189,b:248}),(0,U.Mj)({r:234,g:179,b:8})],Q=[(0,U.Mj)({r:190,g:120,b:120}),(0,U.Mj)({r:120,g:160,b:190}),(0,U.Mj)({r:190,g:160,b:100}),(0,U.Mj)({r:160,g:120,b:190}),(0,U.Mj)({r:100,g:170,b:130}),(0,U.Mj)({r:190,g:130,b:160}),(0,U.Mj)({r:120,g:150,b:100}),(0,U.Mj)({r:190,g:140,b:120}),(0,U.Mj)({r:100,g:120,b:160}),(0,U.Mj)({r:170,g:170,b:120}),(0,U.Mj)({r:160,g:120,b:130}),(0,U.Mj)({r:120,g:170,b:170}),(0,U.Mj)({r:170,g:140,b:100}),(0,U.Mj)({r:140,g:120,b:160}),(0,U.Mj)({r:150,g:170,b:130}),(0,U.Mj)({r:170,g:120,b:140}),(0,U.Mj)({r:120,g:140,b:120}),(0,U.Mj)({r:180,g:160,b:160}),(0,U.Mj)({r:130,g:130,b:160}),(0,U.Mj)({r:160,g:150,b:120}),(0,U.Mj)({r:120,g:160,b:150}),(0,U.Mj)({r:170,g:150,b:170}),(0,U.Mj)({r:150,g:160,b:120}),(0,U.Mj)({r:120,g:130,b:140}),(0,U.Mj)({r:180,g:140,b:140}),(0,U.Mj)({r:140,g:160,b:170}),(0,U.Mj)({r:170,g:150,b:130}),(0,U.Mj)({r:160,g:130,b:160}),(0,U.Mj)({r:130,g:170,b:130}),(0,U.Mj)({r:170,g:130,b:130}),(0,U.Mj)({r:130,g:150,b:170}),(0,U.Mj)({r:170,g:170,b:140}),(0,U.Mj)({r:150,g:130,b:150}),(0,U.Mj)({r:140,g:160,b:140}),(0,U.Mj)({r:170,g:130,b:120}),(0,U.Mj)({r:130,g:150,b:160}),(0,U.Mj)({r:160,g:160,b:150}),(0,U.Mj)({r:150,g:140,b:160}),(0,U.Mj)({r:150,g:170,b:150}),(0,U.Mj)({r:160,g:140,b:130}),(0,U.Mj)({r:140,g:150,b:160}),(0,U.Mj)({r:160,g:150,b:140}),(0,U.Mj)({r:140,g:130,b:140}),(0,U.Mj)({r:150,g:160,b:160}),(0,U.Mj)({r:160,g:140,b:150}),(0,U.Mj)({r:130,g:160,b:150}),(0,U.Mj)({r:160,g:150,b:160}),(0,U.Mj)({r:150,g:160,b:140}),(0,U.Mj)({r:150,g:140,b:150})],Z=new class{constructor(){this.rand=new $(123),this.background=(0,U.Mj)({r:60,g:60,b:60}),this.land=(0,U.Mj)({r:194,g:193,b:148}),this.shore=(0,U.Mj)({r:204,g:203,b:158}),this.falloutColors=[(0,U.Mj)({r:120,g:255,b:71}),(0,U.Mj)({r:130,g:255,b:85}),(0,U.Mj)({r:110,g:245,b:65}),(0,U.Mj)({r:125,g:255,b:75}),(0,U.Mj)({r:115,g:250,b:68})],this.water=(0,U.Mj)({r:70,g:132,b:180}),this.shorelineWater=(0,U.Mj)({r:100,g:143,b:255}),this._selfColor=(0,U.Mj)({r:0,g:255,b:0}),this._allyColor=(0,U.Mj)({r:255,g:255,b:0}),this._enemyColor=(0,U.Mj)({r:255,g:0,b:0}),this._spawnHighlightColor=(0,U.Mj)({r:255,g:213,b:79})}teamColor(t){switch(t){case a:return H;case n:return W;case o:return L;case h:return G;case l:return V;case c:return K;case u:return z;case d:return Y;default:return J[D(t)%J.length]}}territoryColor(t){return null!==t.team()?this.teamColor(t.team()):t.info().playerType==M.Human?J[D(t.id())%J.length]:t.info().playerType==M.Bot?Q[D(t.id())%Q.length]:X[D(t.id())%X.length]}textColor(t){return t.info().playerType==M.Human?"#000000":"#4D4D4D"}specialBuildingColor(t){const e=this.territoryColor(t).rgba;return(0,U.Mj)({r:Math.max(e.r-50,0),g:Math.max(e.g-50,0),b:Math.max(e.b-50,0)})}borderColor(t){const e=this.territoryColor(t).rgba;return(0,U.Mj)({r:Math.max(e.r-40,0),g:Math.max(e.g-40,0),b:Math.max(e.b-40,0)})}defendedBorderColor(t){const e=this.borderColor(t).rgba;return(0,U.Mj)({r:Math.max(e.r-40,0),g:Math.max(e.g-40,0),b:Math.max(e.b-40,0)})}focusedBorderColor(){return(0,U.Mj)({r:230,g:230,b:230})}focusedDefendedBorderColor(){return(0,U.Mj)({r:200,g:200,b:200})}terrainColor(t,e){const i=t.magnitude(e);if(t.isShore(e))return this.shore;switch(t.terrainType(e)){case b.Ocean:case b.Lake:const s=this.water.rgba;return t.isShoreline(e)&&t.isWater(e)?this.shorelineWater:(0,U.Mj)({r:Math.max(s.r-10+(11-Math.min(i,10)),0),g:Math.max(s.g-10+(11-Math.min(i,10)),0),b:Math.max(s.b-10+(11-Math.min(i,10)),0)});case b.Plains:return(0,U.Mj)({r:190,g:220-2*i,b:138});case b.Highland:return(0,U.Mj)({r:200+2*i,g:183+2*i,b:138+2*i});case b.Mountain:return(0,U.Mj)({r:230+i/2,g:230+i/2,b:230+i/2})}}backgroundColor(){return this.background}falloutColor(){return this.rand.randElement(this.falloutColors)}font(){return"Overpass, sans-serif"}selfColor(){return this._selfColor}allyColor(){return this._allyColor}enemyColor(){return this._enemyColor}spawnHighlightColor(){return this._spawnHighlightColor}},tt=new class{constructor(){this.rand=new $(123),this.background=(0,U.Mj)({r:0,g:0,b:0}),this.land=(0,U.Mj)({r:194,g:193,b:148}),this.shore=(0,U.Mj)({r:134,g:133,b:88}),this.falloutColors=[(0,U.Mj)({r:120,g:255,b:71}),(0,U.Mj)({r:130,g:255,b:85}),(0,U.Mj)({r:110,g:245,b:65}),(0,U.Mj)({r:125,g:255,b:75}),(0,U.Mj)({r:115,g:250,b:68})],this.water=(0,U.Mj)({r:14,g:11,b:30}),this.shorelineWater=(0,U.Mj)({r:50,g:50,b:50}),this._selfColor=(0,U.Mj)({r:0,g:255,b:0}),this._allyColor=(0,U.Mj)({r:255,g:255,b:0}),this._enemyColor=(0,U.Mj)({r:255,g:0,b:0}),this._spawnHighlightColor=(0,U.Mj)({r:255,g:213,b:79})}teamColor(t){switch(t){case a:return H;case n:return W;case o:return L;case h:return G;case l:return V;case c:return K;case u:return z;case d:return Y;default:return J[D(t)%J.length]}}territoryColor(t){return null!==t.team()?this.teamColor(t.team()):t.info().playerType==M.Human?J[D(t.id())%J.length]:t.info().playerType==M.Bot?Q[D(t.id())%Q.length]:X[D(t.id())%X.length]}textColor(t){return t.info().playerType==M.Human?"#ffffff":"#e6e6e6"}specialBuildingColor(t){const e=this.territoryColor(t).rgba;return(0,U.Mj)({r:Math.max(e.r-50,0),g:Math.max(e.g-50,0),b:Math.max(e.b-50,0)})}borderColor(t){const e=this.territoryColor(t).rgba;return(0,U.Mj)({r:Math.max(e.r-40,0),g:Math.max(e.g-40,0),b:Math.max(e.b-40,0)})}defendedBorderColor(t){const e=this.borderColor(t).rgba;return(0,U.Mj)({r:Math.max(e.r-40,0),g:Math.max(e.g-40,0),b:Math.max(e.b-40,0)})}focusedBorderColor(){return(0,U.Mj)({r:255,g:255,b:255})}focusedDefendedBorderColor(){return(0,U.Mj)({r:215,g:215,b:215})}terrainColor(t,e){const i=t.magnitude(e);if(t.isShore(e))return this.shore;switch(t.terrainType(e)){case b.Ocean:case b.Lake:const s=this.water.rgba;return t.isShoreline(e)&&t.isWater(e)?this.shorelineWater:t.magnitude(e)<10?(0,U.Mj)({r:Math.max(s.r+9-i,0),g:Math.max(s.g+9-i,0),b:Math.max(s.b+9-i,0)}):this.water;case b.Plains:return(0,U.Mj)({r:140,g:170-2*i,b:88});case b.Highland:return(0,U.Mj)({r:150+2*i,g:133+2*i,b:88+2*i});case b.Mountain:return(0,U.Mj)({r:180+i/2,g:180+i/2,b:180+i/2})}}backgroundColor(){return this.background}falloutColor(){return this.rand.randElement(this.falloutColors)}font(){return"Overpass, sans-serif"}selfColor(){return this._selfColor}allyColor(){return this._allyColor}enemyColor(){return this._enemyColor}spawnHighlightColor(){return this._spawnHighlightColor}};class et{otelEnabled(){return Boolean(this.otelEndpoint()&&this.otelUsername()&&this.otelPassword())}otelEndpoint(){return process.env.OTEL_ENDPOINT}otelUsername(){return process.env.OTEL_USERNAME}otelPassword(){return process.env.OTEL_PASSWORD}region(){return this.env()==q.Dev?"dev":process.env.REGION}gitCommit(){return process.env.GIT_COMMIT}r2Endpoint(){return`https://${process.env.CF_ACCOUNT_ID}.r2.cloudflarestorage.com`}r2AccessKey(){return process.env.R2_ACCESS_KEY}r2SecretKey(){return process.env.R2_SECRET_KEY}r2Bucket(){return process.env.R2_BUCKET}adminHeader(){return"x-admin-key"}adminToken(){return process.env.ADMIN_TOKEN}turnIntervalMs(){return 100}gameCreationRate(){return 6e4}lobbyMaxPlayers(t,e){return Math.min(150,([g.GatewayToTheAtlantic,g.SouthAmerica,g.NorthAmerica,g.Africa,g.Europe].includes(t)?Math.random()<.2?100:50:[g.Australia,g.Iceland,g.Britannia,g.Asia,g.FalklandIslands,g.Baikal].includes(t)||[g.Mena,g.Mars,g.Oceania,g.Japan,g.FaroeIslands,g.DeglaciatedAntarctica,g.EuropeClassic].includes(t)?Math.random()<.3?50:25:[g.BetweenTwoSeas,g.BlackSea,g.Pangaea].includes(t)?Math.random()<.5?30:15:t==g.World?Math.random()<.2?150:50:Math.random()<.2?50:20)*(e==m.Team?2:1))}workerIndex(t){return D(t)%this.numWorkers()}workerPath(t){return`w${this.workerIndex(t)}`}workerPort(t){return this.workerPortByIndex(this.workerIndex(t))}workerPortByIndex(t){return 3001+t}}class it{constructor(t,e,i){this._serverConfig=t,this._gameConfig=e,this._userSettings=i}samHittingChance(){return.8}samWarheadHittingChance(){return.5}traitorDefenseDebuff(){return.5}traitorDuration(){return 300}spawnImmunityDuration(){return 50}gameConfig(){return this._gameConfig}serverConfig(){return this._serverConfig}userSettings(){return this._userSettings}difficultyModifier(t){switch(t){case r.Easy:return 1;case r.Medium:return 3;case r.Hard:return 9;case r.Impossible:return 18}}cityPopulationIncrease(){return 25e4}falloutDefenseModifier(t){return 5-2*t}SAMCooldown(){return 75}SiloCooldown(){return 75}defensePostRange(){return 30}defensePostDefenseBonus(){return 5}playerTeams(){return this._gameConfig.playerTeams??0}spawnNPCs(){return!this._gameConfig.disableNPCs}isUnitDisabled(t){return this._gameConfig.disabledUnits?.includes(t)??!1}bots(){return this._gameConfig.bots}instantBuild(){return this._gameConfig.instantBuild}infiniteGold(){return this._gameConfig.infiniteGold}infiniteTroops(){return this._gameConfig.infiniteTroops}tradeShipGold(t){return 1e4+150*Math.pow(t,1.1)}tradeShipSpawnRate(t){return Math.round(10*Math.pow(t,.6))}unitInfo(t){switch(t){case f.TransportShip:return{cost:()=>0,territoryBound:!1};case f.Warship:return{cost:t=>t.type()==M.Human&&this.infiniteGold()?0:Math.min(1e6,25e4*(t.unitsIncludingConstruction(f.Warship).length+1)),territoryBound:!1,maxHealth:1e3};case f.Shell:return{cost:()=>0,territoryBound:!1,damage:250};case f.SAMMissile:return{cost:()=>0,territoryBound:!1};case f.Port:return{cost:t=>t.type()==M.Human&&this.infiniteGold()?0:Math.min(1e6,125e3*Math.pow(2,t.unitsIncludingConstruction(f.Port).length)),territoryBound:!0,constructionDuration:this.instantBuild()?0:20};case f.AtomBomb:return{cost:t=>t.type()==M.Human&&this.infiniteGold()?0:75e4,territoryBound:!1};case f.HydrogenBomb:return{cost:t=>t.type()==M.Human&&this.infiniteGold()?0:5e6,territoryBound:!1};case f.MIRV:return{cost:t=>t.type()==M.Human&&this.infiniteGold()?0:25e6,territoryBound:!1};case f.MIRVWarhead:case f.TradeShip:return{cost:()=>0,territoryBound:!1};case f.MissileSilo:return{cost:t=>t.type()==M.Human&&this.infiniteGold()?0:1e6,territoryBound:!0,constructionDuration:this.instantBuild()?0:100};case f.DefensePost:return{cost:t=>t.type()==M.Human&&this.infiniteGold()?0:Math.min(25e4,5e4*(t.unitsIncludingConstruction(f.DefensePost).length+1)),territoryBound:!0,constructionDuration:this.instantBuild()?0:50};case f.SAMLauncher:return{cost:t=>t.type()==M.Human&&this.infiniteGold()?0:Math.min(3e6,15e5*(t.unitsIncludingConstruction(f.SAMLauncher).length+1)),territoryBound:!0,constructionDuration:this.instantBuild()?0:300};case f.City:return{cost:t=>t.type()==M.Human&&this.infiniteGold()?0:Math.min(1e6,125e3*Math.pow(2,t.unitsIncludingConstruction(f.City).length)),territoryBound:!0,constructionDuration:this.instantBuild()?0:20};case f.Construction:return{cost:()=>0,territoryBound:!0};default:j(t)}}defaultDonationAmount(t){return Math.floor(t.troops()/3)}donateCooldown(){return 100}emojiMessageDuration(){return 50}emojiMessageCooldown(){return 50}targetDuration(){return 100}targetCooldown(){return 150}allianceRequestCooldown(){return 300}allianceDuration(){return 6e3}percentageTilesOwnedToWin(){return this._gameConfig.gameMode==m.Team?95:80}boatMaxNumber(){return 3}numSpawnPhaseTurns(){return this._gameConfig.gameType==p.Singleplayer?100:300}numBots(){return this.bots()}theme(){return this.userSettings().darkMode()?tt:Z}attackLogic(t,e,i,s,r){let n=0,a=0;const o=t.terrainType(r);switch(o){case b.Plains:n=85,a=16.5;break;case b.Highland:n=100,a=20;break;case b.Mountain:n=120,a=25;break;default:throw new Error(`terrain type ${o} not supported`)}if(s.isPlayer())for(const e of t.nearbyUnits(r,t.config().defensePostRange(),f.DefensePost))if(e.unit.owner()==s){n*=this.defensePostDefenseBonus(),a*=this.defensePostDefenseBonus();break}if(t.hasFallout(r)){const e=t.numTilesWithFallout()/t.numLandTiles();n*=this.falloutDefenseModifier(e),a*=this.falloutDefenseModifier(e)}i.isPlayer()&&s.isPlayer()&&(i.type()==M.Human&&s.type()==M.Bot&&(n*=.8),i.type()==M.FakeHuman&&s.type()==M.Bot&&(n*=.8));let h=1;i.numTilesOwned()>1e5&&(h=Math.sqrt(1e5/i.numTilesOwned()));let l=1;return i.numTilesOwned()>75e3&&(l=(75e3/i.numTilesOwned())**.6),s.isPlayer()?{attackerTroopLoss:_(s.troops()/e,.6,2)*n*.8*h*(s.isTraitor()?this.traitorDefenseDebuff():1),defenderTroopLoss:s.troops()/s.numTilesOwned(),tilesPerTickUsed:_(s.troops()/(5*e),.2,1.5)*a*l}:{attackerTroopLoss:i.type()==M.Bot?n/10:n/5,defenderTroopLoss:0,tilesPerTickUsed:_(2e3*Math.max(10,a)/e,5,100)}}attackTilesPerTick(t,e,i,s){return i.isPlayer()?_(5*t/i.troops()*2,.01,.5)*s*3:2*s}boatAttackAmount(t,e){return Math.floor(t.troops()/5)}warshipShellLifetime(){return 20}radiusPortSpawn(){return 20}proximityBonusPortsNb(t){return _(t/3,4,t)}attackAmount(t,e){return t.type()==M.Bot?t.troops()/20:t.troops()/5}startManpower(t){if(t.playerType==M.Bot)return 1e4;if(t.playerType==M.FakeHuman)switch(this._gameConfig.difficulty){case r.Easy:return 2500*(t?.nation?.strength??1);case r.Medium:return 5e3*(t?.nation?.strength??1);case r.Hard:return 2e4*(t?.nation?.strength??1);case r.Impossible:return 5e4*(t?.nation?.strength??1)}return this.infiniteTroops()?1e6:25e3}maxPopulation(t){const e=t.type()==M.Human&&this.infiniteTroops()?1e9:2*(1e3*Math.pow(t.numTilesOwned(),.6)+5e4)+t.units(f.City).length*this.cityPopulationIncrease();if(t.type()==M.Bot)return e/2;if(t.type()==M.Human)return e;switch(this._gameConfig.difficulty){case r.Easy:return.5*e;case r.Medium:return 1*e;case r.Hard:return 1.5*e;case r.Impossible:return 2*e}}populationIncreaseRate(t){const e=this.maxPopulation(t);let i=10+Math.pow(t.population(),.73)/4;if(i*=1-t.population()/e,t.type()==M.Bot&&(i*=.7),t.type()==M.FakeHuman)switch(this._gameConfig.difficulty){case r.Easy:i*=.9;break;case r.Medium:i*=1;break;case r.Hard:i*=1.1;break;case r.Impossible:i*=1.2}return Math.min(t.population()+i,e)-t.population()}goldAdditionRate(t){return Math.sqrt(t.workers()*t.numTilesOwned())/200}troopAdjustmentRate(t){const e=this.maxPopulation(t)/1e3,i=t.population()*t.targetTroopRatio()-t.troops();if(Math.abs(i)<e)return i;const s=e*Math.sign(i);return s<0?5*s:s}nukeMagnitudes(t){switch(t){case f.MIRVWarhead:return{inner:25,outer:30};case f.AtomBomb:return{inner:12,outer:30};case f.HydrogenBomb:return{inner:80,outer:100}}}defaultNukeSpeed(){return 4}nukeDeathFactor(t,e){return 5*t/Math.max(1,e)}structureMinDist(){return 1}shellLifetime(){return 50}warshipPatrolRange(){return 100}warshipTargettingRange(){return 130}warshipShellAttackRate(){return 20}defensePostShellAttackRate(){return 100}safeFromPiratesCooldownMax(){return 20}defensePostTargettingRange(){return 75}}class st extends et{adminToken(){return"WARNING_DEV_ADMIN_KEY_DO_NOT_USE_IN_PRODUCTION"}env(){return q.Dev}gameCreationRate(){return 5e3}lobbyMaxPlayers(){return Math.random()<.5?2:3}samWarheadHittingChance(){return 1}samHittingChance(){return 1}discordRedirectURI(){return"http://localhost:3000/auth/callback"}numWorkers(){return 2}gitCommit(){return"DEV"}}class rt extends it{constructor(t,e,i){super(t,e,i)}unitInfo(t){const e=super.unitInfo(t);return e.cost,e}}const nt=new class extends et{env(){return q.Preprod}discordRedirectURI(){return"https://openfront.dev/auth/callback"}numWorkers(){return 3}},at=new class extends et{numWorkers(){return 6}env(){return q.Prod}discordRedirectURI(){return"https://openfront.io/auth/callback"}};let ot=null;async function ht(t,e=null){const i=await async function(){if(ot)return ot;const t=await fetch("/api/env");if(!t.ok)throw new Error(`Failed to fetch server config: ${t.status} ${t.statusText}`);const e=await t.json();return console.log("Server config loaded:",e),ot=function(t){switch(t){case"dev":return F.log("using dev server config"),new st;case"staging":return F.log("using preprod server config"),nt;case"prod":return F.log("using prod server config"),at;default:throw Error(`unsupported server configuration: ${t}`)}}(e.game_env),ot}();switch(i.env()){case q.Dev:return new rt(i,t,e);case q.Preprod:case q.Prod:return F.log("using prod config"),new it(i,t,e);default:throw Error("unsupported server configuration: prod")}}class lt{constructor(t,e){this.requestorID=t,this.recipientID=e,this.active=!0,this.mg=null}init(t,e){return t.hasPlayer(this.requestorID)?t.hasPlayer(this.recipientID)?(this.mg=t,this.requestor=t.player(this.requestorID),void(this.recipient=t.player(this.recipientID))):(console.warn(`AllianceRequestExecution recipient ${this.recipientID} not found`),void(this.active=!1)):(console.warn(`AllianceRequestExecution requester ${this.requestorID} not found`),void(this.active=!1))}tick(t){this.requestor.isFriendly(this.recipient)?F.warn("already allied"):this.requestor.canSendAllianceRequest(this.recipient)?this.requestor.createAllianceRequest(this.recipient):F.warn("recent or pending alliance request"),this.active=!1}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class ct{constructor(t,e,i){this.requestorID=t,this.recipientID=e,this.accept=i,this.active=!0,this.mg=null}init(t,e){return t.hasPlayer(this.requestorID)?t.hasPlayer(this.recipientID)?(this.mg=t,this.requestor=t.player(this.requestorID),void(this.recipient=t.player(this.recipientID))):(console.warn(`AllianceRequestReplyExecution recipient ${this.recipientID} not found`),void(this.active=!1)):(console.warn(`AllianceRequestReplyExecution requester ${this.requestorID} not found`),void(this.active=!1))}tick(t){if(this.requestor.isFriendly(this.recipient))F.warn("already allied");else{const t=this.requestor.outgoingAllianceRequests().find((t=>t.recipient()==this.recipient));null==t?F.warn("no alliance request found"):this.accept?(t.accept(),this.requestor.updateRelation(this.recipient,100),this.recipient.updateRelation(this.requestor,100)):t.reject()}this.active=!1}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class ut{constructor(t,e){this.requestorID=t,this.recipientID=e,this.active=!0}init(t,e){return t.hasPlayer(this.requestorID)?t.hasPlayer(this.recipientID)?(this.requestor=t.player(this.requestorID),this.recipient=t.player(this.recipientID),void(this.mg=t)):(console.warn(`BreakAllianceExecution: recipient ${this.recipientID} not found`),void(this.active=!1)):(console.warn(`BreakAllianceExecution requester ${this.requestorID} not found`),void(this.active=!1))}tick(t){const e=this.requestor.allianceWith(this.recipient);if(null==e)F.warn("cant break alliance, not allied");else{this.requestor.breakAlliance(e),this.recipient.updateRelation(this.requestor,-200);for(const t of this.mg.players())t!=this.requestor&&t.updateRelation(this.requestor,-40)}this.active=!1}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}var dt=i(2738);function gt(t){return pt(t/10)}function pt(t){return(t=Math.max(t,0))>=1e7?(Math.floor(t/1e5)/10).toFixed(1)+"M":t>=1e6?(Math.floor(t/1e4)/100).toFixed(2)+"M":t>=1e5?Math.floor(t/1e3)+"K":t>=1e4?(Math.floor(t/100)/10).toFixed(1)+"K":t>=1e3?(Math.floor(t/10)/100).toFixed(2)+"K":Math.floor(t).toString()}class mt{constructor(t=null,e,i,s=null,r=!0){this.startTroops=t,this._ownerID=e,this._targetID=i,this.sourceTile=s,this.removeTroops=r,this.breakAlliance=!1,this.active=!0,this.toConquer=new dt.PriorityQueue(((t,e)=>t.priority-e.priority)),this.random=new $(123),this.border=new Set,this.attack=null}targetID(){return this._targetID}activeDuringSpawnPhase(){return!1}init(t,e){if(this.active){if(this.mg=t,!t.hasPlayer(this._ownerID))return console.warn(`player ${this._ownerID} not found`),void(this.active=!1);if(null!=this._targetID&&!t.hasPlayer(this._targetID))return console.warn(`target ${this._targetID} not found`),void(this.active=!1);if(this._owner=t.player(this._ownerID),this.target=this._targetID==this.mg.terraNullius().id()?t.terraNullius():t.player(this._targetID),this.target&&this.target.isPlayer()){const t=this.target;t.type()!=M.Bot&&this._owner.type()!=M.Bot&&t.addEmbargo(this._owner.id())}if(this._owner==this.target)return console.error(`Player ${this._owner} cannot attack itself`),void(this.active=!1);if(this.target.isPlayer()&&this.mg.config().numSpawnPhaseTurns()+this.mg.config().spawnImmunityDuration()>this.mg.ticks())return console.warn("cannot attack player during immunity phase"),void(this.active=!1);null==this.startTroops&&(this.startTroops=this.mg.config().attackAmount(this._owner,this.target)),this.removeTroops&&(this.startTroops=Math.min(this._owner.troops(),this.startTroops),this._owner.removeTroops(this.startTroops)),this.attack=this._owner.createAttack(this.target,this.startTroops,this.sourceTile);for(const t of this._owner.incomingAttacks())if(t.attacker()==this.target){if(t.troops()>this.attack.troops())return t.setTroops(t.troops()-this.attack.troops()),this.attack.delete(),void(this.active=!1);this.attack.setTroops(this.attack.troops()-t.troops()),t.delete()}for(const t of this._owner.outgoingAttacks())if(t!=this.attack&&t.target()==this.attack.target()&&t.sourceTile()==this.attack.sourceTile())return t.setTroops(t.troops()+this.attack.troops()),this.active=!1,void this.attack.delete();null!=this.sourceTile?this.addNeighbors(this.sourceTile):this.refreshToConquer(),this.target.isPlayer()&&(this._owner.isAlliedWith(this.target)&&(this.breakAlliance=!0),this.target.updateRelation(this._owner,-80))}}refreshToConquer(){this.toConquer.clear(),this.border.clear();for(const t of this._owner.borderTiles())this.addNeighbors(t)}retreat(t=0){const e=this.attack.troops()*(t/100);e&&this.mg.displayMessage(`Attack cancelled, ${gt(e)} soldiers killed during retreat.`,v.SUCCESS,this._owner.id()),this._owner.addTroops(this.attack.troops()-e),this.attack.delete(),this.active=!1}tick(t){if(this.attack.retreated())return this.attack.target().isPlayer()?this.retreat(25):this.retreat(),void(this.active=!1);if(this.attack.retreating())return;if(!this.attack.isActive())return void(this.active=!1);const e=this._owner.allianceWith(this.target);if(this.breakAlliance&&null!=e&&(this.breakAlliance=!1,this._owner.breakAlliance(e)),this.target.isPlayer()&&this._owner.isAlliedWith(this.target))return void this.retreat();let i=this.mg.config().attackTilesPerTick(this.attack.troops(),this._owner,this.target,this.border.size+this.random.nextInt(0,5));for(;i>0;){if(this.attack.troops()<1)return this.attack.delete(),void(this.active=!1);if(0==this.toConquer.size())return this.refreshToConquer(),void this.retreat();const t=this.toConquer.dequeue().tile;this.border.delete(t);const e=this.mg.neighbors(t).filter((t=>this.mg.owner(t)==this._owner)).length>0;if(this.mg.owner(t)!=this.target||!e)continue;this.addNeighbors(t);const{attackerTroopLoss:s,defenderTroopLoss:r,tilesPerTickUsed:n}=this.mg.config().attackLogic(this.mg,this.attack.troops(),this._owner,this.target,t);i-=n,this.attack.setTroops(this.attack.troops()-s),this.target.isPlayer()&&this.target.removeTroops(r),this._owner.conquer(t),this.handleDeadDefender()}}addNeighbors(t){for(const e of this.mg.neighbors(t)){if(this.mg.isWater(e)||this.mg.owner(e)!=this.target)continue;this.border.add(e);const i=this.mg.neighbors(e).filter((t=>this.mg.owner(t)==this._owner)).length;let s=0;switch(this.mg.terrainType(t)){case b.Plains:s=1;break;case b.Highland:s=1.5;break;case b.Mountain:s=2}this.toConquer.enqueue(new ft(e,(this.random.nextInt(0,7)+10)*(1-.5*i+s/2)+this.mg.ticks()))}}handleDeadDefender(){if(!(this.target.isPlayer()&&this.target.numTilesOwned()<100))return;const t=this.target.gold();this.mg.displayMessage(`Conquered ${this.target.displayName()} received ${pt(t)} gold`,v.SUCCESS,this._owner.id()),this.target.removeGold(t),this._owner.addGold(t);for(let t=0;t<10;t++)for(const t of this.target.tiles())if(this.mg.neighbors(t).some((t=>this.mg.owner(t)==this._owner)))this._owner.conquer(t);else for(const e of this.mg.neighbors(t)){const i=this.mg.owner(e);if(i.isPlayer()&&i!=this.target){this.mg.player(i.id()).conquer(t);break}}}owner(){return this._owner}isActive(){return this.active}}class ft{constructor(t,e){this.tile=t,this.priority=e}}class yt{constructor(t,e,i){this.senderID=t,this.recipientID=e,this.emoji=i,this.active=!0}init(t,e){return t.hasPlayer(this.senderID)?this.recipientID==s||t.hasPlayer(this.recipientID)?(this.requestor=t.player(this.senderID),void(this.recipient=this.recipientID==s?s:t.player(this.recipientID))):(console.warn(`EmojiExecution: recipient ${this.recipientID} not found`),void(this.active=!1)):(console.warn(`EmojiExecution: sender ${this.senderID} not found`),void(this.active=!1))}tick(t){const e=B.at(this.emoji);this.requestor.canSendEmoji(this.recipient)?(this.requestor.sendEmoji(this.recipient,e),"🖕"==e&&this.recipient!=s&&this.recipient.type()==M.FakeHuman&&this.recipient.updateRelation(this.requestor,-100)):F.warn(`cannot send emoji from ${this.requestor} to ${this.recipient}`),this.active=!1}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class wt{constructor(t,e,i,s,r){this.random=t,this.game=e,this.player=i,this.triggerRatio=s,this.reserveRatio=r,this.enemy=null,this.assistAcceptEmoji=B.indexOf("👍"),this.firstAttackSent=!1}handleAllianceRequests(){for(const t of this.player.incomingAllianceRequests())bt(this.player,t)?t.accept():t.reject()}emoji(t,e){t.type()===M.Human&&this.game.addExecution(new yt(this.player.id(),t.id(),e))}forgetOldEnemies(){this.game.ticks()-this.enemyUpdated>100&&(this.enemy=null)}checkIncomingAttacks(){const t=this.player.incomingAttacks();t.length>0&&(this.enemy=t.sort(((t,e)=>e.troops()-t.troops()))[0].attacker(),this.enemyUpdated=this.game.ticks())}assistAllies(){t:for(const t of this.player.allies())if(0!==t.targets().length&&!(this.player.relation(t)<w.Friendly))for(const e of t.targets())if(e!==this.player&&!this.player.isAlliedWith(e)){this.player.updateRelation(t,-20),this.enemy=e,this.enemyUpdated=this.game.ticks(),this.emoji(t,this.assistAcceptEmoji);break t}}selectEnemy(){if(null===this.enemy){const t=this.game.config().maxPopulation(this.player);if(this.player.population()/t<this.triggerRatio)return null}if(null===this.enemy){const t=this.player.neighbors().filter((t=>t.isPlayer()&&t.type()===M.Bot));if(t.length>0){const e=t=>t.troops()/t.numTilesOwned();this.enemy=t.sort(((t,i)=>e(t)-e(i)))[0],this.enemyUpdated=this.game.ticks()}}if(null===this.enemy){const t=this.player.allRelationsSorted()[0]??null;null!=t&&t.relation===w.Hostile&&(this.enemy=t.player,this.enemyUpdated=this.game.ticks())}return this.enemy&&this.player.isFriendly(this.enemy)&&(this.enemy=null),this.enemy}selectRandomEnemy(){if(null===this.enemy){const t=this.game.config().maxPopulation(this.player);if(this.player.population()/t<this.triggerRatio)return null;const e=this.player.neighbors();for(const t of this.random.shuffleArray(e))t.isPlayer()&&(this.player.isFriendly(t)||t.type()==M.FakeHuman&&this.random.chance(2)||(this.enemy=t,this.enemyUpdated=this.game.ticks()));const i=this.player.neighbors().filter((t=>t.isPlayer()&&t.isTraitor()));if(i.length>0){const t=this.random.randElement(i),e=this.player.isFriendly(t)?6:3;this.random.chance(e)&&(this.enemy=t,this.enemyUpdated=this.game.ticks())}}return this.enemy&&this.player.isFriendly(this.enemy)&&(this.enemy=null),this.enemy}sendAttack(t){if(t.isPlayer()&&this.player.isOnSameTeam(t))return;const e=this.game.config().maxPopulation(this.player)*this.player.targetTroopRatio()*this.reserveRatio,i=this.firstAttackSent?this.player.troops()-e:this.player.troops()/5;i<1||(this.firstAttackSent=!0,this.game.addExecution(new mt(i,this.player.id(),t.isPlayer()?t.id():null)))}}function bt(t,e){const i=!e.requestor().isTraitor(),s=t.relation(e.requestor())>=w.Neutral,r=e.requestor().numTilesOwned()>3*t.numTilesOwned()||e.requestor().alliances().length<3;return i&&s&&r}class Mt{constructor(t){this.bot=t,this.active=!0,this.neighborsTerraNullius=!0,this.behavior=null,this.random=new $(D(t.id())),this.attackRate=this.random.nextInt(40,80),this.attackTick=this.random.nextInt(0,this.attackRate),this.triggerRatio=this.random.nextInt(60,90)/100,this.reserveRatio=this.random.nextInt(30,60)/100}activeDuringSpawnPhase(){return!1}init(t){this.mg=t,this.bot.setTargetTroopRatio(.7)}tick(t){t%this.attackRate==this.attackTick&&(this.bot.isAlive()?(null===this.behavior&&(this.behavior=new wt(this.random,this.mg,this.bot,this.triggerRatio,this.reserveRatio)),this.behavior.handleAllianceRequests(),this.maybeAttack()):this.active=!1)}maybeAttack(){const t=this.bot.neighbors().filter((t=>t.isPlayer()&&t.isTraitor()));if(t.length>0){const e=this.random.randElement(t),i=this.bot.isFriendly(e)?6:3;if(this.random.chance(i))return void this.behavior.sendAttack(e)}if(this.neighborsTerraNullius){if(this.bot.sharesBorderWith(this.mg.terraNullius()))return void this.behavior.sendAttack(this.mg.terraNullius());this.neighborsTerraNullius=!1}this.behavior.forgetOldEnemies(),this.behavior.checkIncomingAttacks();const e=this.behavior.selectRandomEnemy();e&&this.bot.sharesBorderWith(e)&&this.behavior.sendAttack(e)}isActive(){return this.active}}class vt{constructor(t){this.playerID=t,this.ticksPerClusterCalc=20,this.lastCalc=0,this.active=!0}activeDuringSpawnPhase(){return!1}init(t,e){if(!t.hasPlayer(this.playerID))return console.warn(`PlayerExecution: player ${this.playerID} not found`),void(this.active=!1);this.mg=t,this.config=t.config(),this.player=t.player(this.playerID),this.lastCalc=e+D(this.player.name())%this.ticksPerClusterCalc}tick(t){this.player.decayRelations();const e=this.player.units(f.Port).length>0;if(this.player.units().forEach((t=>{if(t.health()<=0)return void t.delete();e&&t.type()==f.Warship&&t.modifyHealth(1);const i=this.mg.owner(t.tile());t.info().territoryBound&&(i.isPlayer()?i!=this.player&&this.mg.player(i.id()).captureUnit(t):t.delete())})),!this.player.isAlive())return this.player.units().forEach((t=>{t.type()!=f.AtomBomb&&t.type()!=f.HydrogenBomb&&t.type()!=f.MIRVWarhead&&t.type()!=f.MIRV&&t.delete()})),void(this.active=!1);const i=this.config.populationIncreaseRate(this.player);this.player.addWorkers(i*(1-this.player.targetTroopRatio())),this.player.addTroops(i*this.player.targetTroopRatio()),this.player.addGold(this.config.goldAdditionRate(this.player));const s=this.config.troopAdjustmentRate(this.player);this.player.addTroops(s),this.player.removeWorkers(s);const r=Array.from(this.player.alliances());for(const t of r)this.mg.ticks()-t.createdAt()>this.mg.config().allianceDuration()&&t.expire();if(t-this.lastCalc>this.ticksPerClusterCalc&&this.player.lastTileChange()>this.lastCalc){this.lastCalc=t;const e=performance.now();this.removeClusters();const i=performance.now();i-e>1e3&&F.log(`player ${this.player.name()}, took ${i-e}ms`)}}removeClusters(){const t=this.calculateClusters();t.sort(((t,e)=>e.size-t.size));const e=t.shift();this.player.largestClusterBoundingBox=A(this.mg,e);const i=this.surroundedBySamePlayer(e);i&&!this.player.isFriendly(i)&&this.removeCluster(e);for(const e of t)this.isSurrounded(e)&&this.removeCluster(e)}surroundedBySamePlayer(t){const e=new Set;for(const i of t){const t=this.mg.isOceanShore(i);if(!this.mg.isOceanShore(i)||t){if(t||this.mg.isOnEdgeOfMap(i)||this.mg.neighbors(i).some((t=>!this.mg.hasOwner(t))))return!1;if(this.mg.neighbors(i).filter((t=>this.mg.ownerID(t)!=this.player.smallID())).forEach((t=>e.add(this.mg.ownerID(t)))),1!=e.size)return!1}}if(1!=e.size)return!1;const i=this.mg.playerBySmallID(Array.from(e)[0]);return!!x(A(this.mg,i.borderTiles()),A(this.mg,t))&&i}isSurrounded(t){const e=new Set;for(const i of t){if(this.mg.isShore(i)||this.mg.isOnEdgeOfMap(i))return!1;this.mg.neighbors(i).filter((t=>this.mg.ownerID(t)!=this.player.smallID())).forEach((t=>e.add(t)))}return 0!=e.size&&x(A(this.mg,e),A(this.mg,t))}removeCluster(t){if(Array.from(t).some((t=>this.mg.ownerID(t)!=this.player.smallID())))return;const e=this.getCapturingPlayer(t);if(null==e)return;const i=t.values().next().value,s=this.mg.bfs(i,((t,e)=>this.mg.ownerID(e)==this.player.smallID()));if(this.player.numTilesOwned()==s.size){const t=this.player.gold();this.mg.displayMessage(`Conquered ${this.player.displayName()} received ${pt(t)} gold`,v.SUCCESS,e.id()),e.addGold(t),this.player.removeGold(t)}for(const t of s)e.conquer(t)}getCapturingPlayer(t){const e=new Set;for(const i of t)for(const t of this.mg.neighbors(i))this.mg.ownerID(t)!=this.player.smallID()&&e.add(this.mg.ownerID(t));let i=null,s=0;for(const t of e){const e=this.mg.playerBySmallID(t);if(e.isPlayer())for(const t of e.outgoingAttacks())t.target()==this.player&&t.troops()>s&&(s=t.troops(),i=e)}if(null!=i)return i;const r=function(t){const e=new Map;for(const i of t)e.set(i,(e.get(i)||0)+1);let i=0,s=0;for(const[t,r]of e)r>s&&(s=r,i=t);return i}(e);if(!this.mg.playerBySmallID(r).isPlayer())return null;const n=this.mg.playerBySmallID(r);return n.isPlayer()?n:null}calculateClusters(){const t=new Set,e=this.player.borderTiles(),i=[];for(const s of e){if(t.has(s))continue;const r=new Set,n=[s];for(t.add(s);n.length>0;){const i=n.shift();r.add(i);const s=this.mg.neighborsWithDiag(i);for(const i of s)e.has(i)&&!t.has(i)&&(n.push(i),t.add(i))}i.push(r)}return i}owner(){return this.player}isActive(){return this.active}}class kt{constructor(t,e,i,s){if(this.numLandTiles_=s,this._numTilesWithFallout=0,i.length!==t*e)throw new Error(`Terrain data length ${i.length} doesn't match dimensions ${t}x${e}`);this.width_=t,this.height_=e,this.terrain=i,this.state=new Uint16Array(t*e);let r=0;this.refToX=new Array(t*e),this.refToY=new Array(t*e),this.yToRef=new Array(e);for(let i=0;i<e;i++){this.yToRef[i]=r;for(let e=0;e<t;e++)this.refToX[r]=e,this.refToY[r]=i,r++}}numTilesWithFallout(){return this._numTilesWithFallout}ref(t,e){if(!this.isValidCoord(t,e))throw new Error(`Invalid coordinates: ${t},${e}`);return this.yToRef[e]+t}x(t){return this.refToX[t]}y(t){return this.refToY[t]}cell(t){return new S(this.x(t),this.y(t))}width(){return this.width_}height(){return this.height_}numLandTiles(){return this.numLandTiles_}isValidCoord(t,e){return t>=0&&t<this.width_&&e>=0&&e<this.height_}isLand(t){return Boolean(this.terrain[t]&1<<kt.IS_LAND_BIT)}isOceanShore(t){return this.isLand(t)&&this.neighbors(t).some((t=>this.isOcean(t)))}isOcean(t){return Boolean(this.terrain[t]&1<<kt.OCEAN_BIT)}isShoreline(t){return Boolean(this.terrain[t]&1<<kt.SHORELINE_BIT)}magnitude(t){return this.terrain[t]&kt.MAGNITUDE_MASK}ownerID(t){return this.state[t]&kt.PLAYER_ID_MASK}hasOwner(t){return 0!=this.ownerID(t)}setOwnerID(t,e){if(e>kt.PLAYER_ID_MASK)throw new Error(`Player ID ${e} exceeds maximum value ${kt.PLAYER_ID_MASK}`);this.state[t]=this.state[t]&~kt.PLAYER_ID_MASK|e}hasFallout(t){return Boolean(this.state[t]&1<<kt.FALLOUT_BIT)}setFallout(t,e){const i=this.hasFallout(t);e?i||(this._numTilesWithFallout++,this.state[t]|=1<<kt.FALLOUT_BIT):i&&(this._numTilesWithFallout--,this.state[t]&=~(1<<kt.FALLOUT_BIT))}isOnEdgeOfMap(t){const e=this.x(t),i=this.y(t);return 0==e||e==this.width()-1||0==i||i==this.height()-1}isBorder(t){return this.neighbors(t).some((e=>this.ownerID(e)!=this.ownerID(t)))}hasDefenseBonus(t){return Boolean(this.state[t]&1<<kt.DEFENSE_BONUS_BIT)}setDefenseBonus(t,e){e?this.state[t]|=1<<kt.DEFENSE_BONUS_BIT:this.state[t]&=~(1<<kt.DEFENSE_BONUS_BIT)}isWater(t){return!this.isLand(t)}isLake(t){return!this.isLand(t)&&!this.isOcean(t)}isShore(t){return this.isLand(t)&&this.isShoreline(t)}cost(t){return this.magnitude(t)<10?2:1}terrainType(t){if(this.isLand(t)){const e=this.magnitude(t);return e<10?b.Plains:e<20?b.Highland:b.Mountain}return this.isOcean(t)?b.Ocean:b.Lake}neighbors(t){const e=[],i=this.width_,s=this.refToX[t];return t>=i&&e.push(t-i),t<(this.height_-1)*i&&e.push(t+i),0!==s&&e.push(t-1),s!==i-1&&e.push(t+1),e}forEachTile(t){for(let e=0;e<this.width_*this.height_;e++)t(e)}manhattanDist(t,e){return Math.abs(this.x(t)-this.x(e))+Math.abs(this.y(t)-this.y(e))}euclideanDistSquared(t,e){const i=this.x(t)-this.x(e),s=this.y(t)-this.y(e);return i*i+s*s}bfs(t,e){const i=new Set,s=[];for(e(this,t)&&(i.add(t),s.push(t));s.length>0;){const t=s.pop();for(const r of this.neighbors(t))!i.has(r)&&e(this,r)&&(i.add(r),s.push(r))}return i}toTileUpdate(t){return BigInt(t)<<16n|BigInt(this.state[t])}updateTile(t){const e=Number(t>>16n),i=Number(0xffffn&t),s=this.hasFallout(e);this.state[e]=i;const r=this.hasFallout(e);return s&&!r&&this._numTilesWithFallout--,!s&&r&&this._numTilesWithFallout++,e}}function St(t,e,i=!1){const s=e*e;return i?(e,i)=>{const r=e.x(t)-.5,n=e.y(t)-.5,a=e.x(i)-r,o=e.y(i)-n;return a*a+o*o<=s}:(e,i)=>e.euclideanDistSquared(t,i)<=s}function Tt(t,e,i=!1){return i?(i,s)=>{const r=i.x(t)-.5,n=i.y(t)-.5;return Math.abs(i.x(s)-r)+Math.abs(i.y(s)-n)<=e}:(i,s)=>i.manhattanDist(t,s)<=e}function _t(t,e){return(i,s)=>t(i,s)&&e(i,s)}function It(t,e,i){const s=Array.from(e).sort(((e,i)=>t.x(e)-t.x(i))),r=Array.from(i).sort(((e,i)=>t.x(e)-t.x(i)));if(0==s.length||0==r.length)return null;let n=0,a=0,o=1/0,h={x:s[0],y:r[0]};for(;n<s.length&&a<r.length;){const e=s[n],i=r[a],l=Math.abs(t.x(e)-t.x(i))+Math.abs(t.y(e)-t.y(i));l<o&&(o=l,h={x:e,y:i}),n===s.length-1?a++:a===r.length-1||t.x(e)<t.x(i)?n++:a++}return h}kt.IS_LAND_BIT=7,kt.SHORELINE_BIT=6,kt.OCEAN_BIT=5,kt.MAGNITUDE_OFFSET=4,kt.MAGNITUDE_MASK=31,kt.PLAYER_ID_OFFSET=0,kt.PLAYER_ID_MASK=4095,kt.FALLOUT_BIT=13,kt.DEFENSE_BONUS_BIT=14;class Dt{constructor(t,e){this.playerInfo=t,this.tile=e,this.active=!0}init(t,e){this.mg=t}tick(t){if(this.active=!1,!this.mg.inSpawnPhase())return void(this.active=!1);let e=null;var i,s;e=this.mg.hasPlayer(this.playerInfo.id)?this.mg.player(this.playerInfo.id):this.mg.addPlayer(this.playerInfo),e.tiles().forEach((t=>e.relinquish(t))),(i=this.mg,s=this.tile,Array.from(i.bfs(s,St(s,4,!0))).filter((t=>!i.hasOwner(t)&&i.isLand(t)))).forEach((t=>{e.conquer(t)})),e.hasSpawned()||(this.mg.addExecution(new vt(e.id())),e.type()==M.Bot&&this.mg.addExecution(new Mt(e))),e.setHasSpawned(!0)}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!0}}const At=["Akkadian","Babylonian","Sumerian","Hittite","Phoenician","Canaanite","Minoan","Mycenaean","Etruscan","Scythian","Thracian","Dacian","Illyrian","Median","Chaldean","Roman","Greek","Byzantine","Persian","Parthian","Seleucid","Ptolemaic","Palmyrene","Macedonian","Carthaginian","Ming","Tang","Song","Yuan","Mauryan","Kushan","Rajput","Mughal","Satavahana","Vijayanagara","Egyptian","Nubian","Kushite","Aksumite","Ethiopian","Songhai","Malian","Ghanaian","Benin","Ashanti","Zulu","Tuareg","Berber","Kanem-Bornu","Buganda","Mossi","Swahili","Somali","Wolof","Umayyad","Abbasid","Ayyubid","Fatimid","Mamluk","Seljuk","Safavid","Ottoman","Almoravid","Almohad","Rashidun","Ziyarid","Frankish","Visigothic","Ostrogothic","Viking","Norman","Saxon","Anglo-Saxon","Celtic","Gaulish","Carolingian","Merovingian","Capetian","Plantagenet","Tudor","Stuart","Habsburg","Romanov","Lancaster","York","Bourbon","Napoleonic","British","French","Spanish","Portuguese","Dutch","Russian","German","Italian","Swedish","Norwegian","Danish","Polish","Hungarian","Austrian","Swiss","Czech","Slovak","Serbian","Croatian","Bosnian","Montenegrin","Bulgarian","Romanian","Apache","Sioux","Cherokee","Navajo","Iroquois","Inuit","Arawak","Carib","Taino","Aztec","Mayan","Incan","Mapuche","Guarani","Tupi","Yanomami","Zuni","Hopi","Kiowa","Comanche","Shoshone","Japanese","Ryukyu","Ainu","Cham","Khmer","Thai","Vietnamese","Burmese","Balinese","Malay","Filipino","Mongolian","Korean","Tibetan","Manchu","Uyghur","Hmong","Karen","Pyu","Hawaiian","Fijian","Tongan","Samoan","Maori","Micronesian","Hebrew","Armenian","Georgian","Phoenician","Chaldean","Kurdish","Turkic","Kazakh","Uzbek","Kyrgyz","Tajik","Uighur","Pashtun","Baloch","Afghan","Persian"],xt=["Empire","Dynasty","Kingdom","Queendom","Sultanate","Confederation","Union","Republic","Caliphate","Dominion","Realm","State","Federation","Territory","Commonwealth","League","Duchy","Province","Protectorate","Colony","Mandate","Free State","Canton","Region","Nation","Assembly","Hierarchy","Archduchy","Grand Duchy","Metropolis","Cluster","Alliance","Tribunal","Council","Confederacy","Order","Regime","Dominion","Syndicate","Guild","Corporation","Patriarchy","Matriarchy","Legion","Horde","Clan","Brotherhood","Sisterhood","Ascendancy","Supremacy","Province","Kingdoms","Tribes","Dominion","Assembly","Republics"];class Pt{constructor(t,e){this.gs=t,this.bots=[],this.random=new $(D(e))}spawnBots(t){let e=0;for(;this.bots.length<t;){if(e>1e4)return F.log("too many retries while spawning bots, giving up"),this.bots;const t=this.randomBotName(),i=this.spawnBot(t);null!=i?this.bots.push(i):e++}return this.bots}spawnBot(t){const e=this.randTile();if(!this.gs.isLand(e))return null;for(const t of this.bots)if(this.gs.manhattanDist(t.tile,e)<30)return null;return new Dt(new T("",t,M.Bot,null,this.random.nextID()),e)}randomBotName(){const t=this.random.nextInt(0,At.length),e=this.random.nextInt(0,xt.length);return`${At[t]} ${xt[e]}`}randTile(){return this.gs.ref(this.random.nextInt(0,this.gs.width()),this.random.nextInt(0,this.gs.height()))}}class jt{constructor(t,e){this.ownerId=t,this.tile=e,this.active=!0}init(t,e){if(this.mg=t,!t.hasPlayer(this.ownerId))return console.warn(`CityExecution: player ${this.ownerId} not found`),void(this.active=!1);this.player=t.player(this.ownerId)}tick(t){if(null==this.city){const t=this.player.canBuild(f.City,this.tile);if(0==t)return F.warn("cannot build city"),void(this.active=!1);this.city=this.player.buildUnit(f.City,0,t)}this.city.isActive()?this.player!=this.city.owner()&&(this.player=this.city.owner()):this.active=!1}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}var Ct,Et;!function(t){t[t.NextTile=0]="NextTile",t[t.Pending=1]="Pending",t[t.Completed=2]="Completed",t[t.PathNotFound=3]="PathNotFound"}(Ct||(Ct={}));class Rt{constructor(t,e,i,s,r){this.dst=e,this.iterations=i,this.maxTries=s,this.gameMap=r,this.fwdOpenSet=new dt.PriorityQueue(((t,e)=>t.fScore-e.fScore)),this.bwdOpenSet=new dt.PriorityQueue(((t,e)=>t.fScore-e.fScore)),this.fwdCameFrom=new Map,this.bwdCameFrom=new Map,this.fwdGScore=new Map,this.bwdGScore=new Map,this.meetingPoint=null,this.completed=!1,this.sources=Array.isArray(t)?t:[t],this.closestSource=this.findClosestSource(e),this.sources.forEach((t=>{this.fwdGScore.set(t,0),this.fwdOpenSet.enqueue({tile:t,fScore:this.heuristic(t,e)})})),this.bwdGScore.set(e,0),this.bwdOpenSet.enqueue({tile:e,fScore:this.heuristic(e,this.findClosestSource(e))})}findClosestSource(t){return this.sources.reduce(((e,i)=>this.heuristic(t,i)<this.heuristic(t,e)?i:e))}compute(){if(this.completed)return Ct.Completed;this.maxTries-=1;let t=this.iterations;for(;!this.fwdOpenSet.isEmpty()&&!this.bwdOpenSet.isEmpty();){if(t--,t<=0)return this.maxTries<=0?Ct.PathNotFound:Ct.Pending;const e=this.fwdOpenSet.dequeue().tile;if(this.bwdGScore.has(e))return this.meetingPoint=e,this.completed=!0,Ct.Completed;this.expandTileRef(e,!0);const i=this.bwdOpenSet.dequeue().tile;if(this.fwdGScore.has(i))return this.meetingPoint=i,this.completed=!0,Ct.Completed;this.expandTileRef(i,!1)}return this.completed?Ct.Completed:Ct.PathNotFound}expandTileRef(t,e){for(const i of this.gameMap.neighbors(t)){if(i!=(e?this.dst:this.closestSource)&&!this.gameMap.isWater(i))continue;const s=e?this.fwdGScore:this.bwdGScore,r=e?this.fwdOpenSet:this.bwdOpenSet,n=e?this.fwdCameFrom:this.bwdCameFrom,a=s.get(t)+this.gameMap.cost(i);if(!s.has(i)||a<s.get(i)){n.set(i,t),s.set(i,a);const o=a+this.heuristic(i,e?this.dst:this.closestSource);r.enqueue({tile:i,fScore:o})}}}heuristic(t,e){try{return 1.1*(Math.abs(this.gameMap.x(t)-this.gameMap.x(e))+Math.abs(this.gameMap.y(t)-this.gameMap.y(e)))}catch{return F.log("uh oh"),0}}reconstructPath(){if(!this.meetingPoint)return[];const t=[this.meetingPoint];let e=this.meetingPoint;for(;this.fwdCameFrom.has(e);)e=this.fwdCameFrom.get(e),t.unshift(e);for(e=this.meetingPoint;this.bwdCameFrom.has(e);)e=this.bwdCameFrom.get(e),t.push(e);return t}}class Bt{constructor(t,e,i,s,r,n){this.gameMap=t,this.miniMap=e,this.dst=s;const a=(Array.isArray(i)?i:[i]).map((e=>this.miniMap.ref(Math.floor(t.x(e)/2),Math.floor(t.y(e)/2)))),o=this.miniMap.ref(Math.floor(t.x(s)/2),Math.floor(t.y(s)/2));this.aStar=new Rt(a,o,r,n,this.miniMap)}compute(){return this.aStar.compute()}reconstructPath(){const t=function(t,e=2){const i=t.map((t=>new S(t.x*e,t.y*e))),s=[];for(let t=0;t<i.length-1;t++){const e=i[t],r=i[t+1];s.push(e);const n=r.x-e.x,a=r.y-e.y,o=Math.max(Math.abs(n),Math.abs(a));for(let t=1;t<o;t++)s.push(new S(Math.round(e.x+n*t/o),Math.round(e.y+a*t/o)))}return i.length>0&&s.push(i[i.length-1]),s}(this.aStar.reconstructPath().map((t=>new S(this.miniMap.x(t),this.miniMap.y(t)))));return t.push(new S(this.gameMap.x(this.dst),this.gameMap.y(this.dst))),t.map((t=>this.gameMap.ref(t.x,t.y)))}}class Ot{constructor(t,e){this.mg=t,this.random=e}nextTile(t,e){const i=this.mg.x(t),s=this.mg.y(t),r=this.mg.x(e),n=this.mg.y(e);if(i===r&&s===n)return!0;let a=i,o=s;const h=Math.floor(1+Math.abs(n-s)/(Math.abs(r-i)+1));return this.random.chance(h)&&i!=r?i<r?a++:i>r&&a--:s<n?o++:s>n&&o--,a==i&&o==s||this.mg.ref(a,o)}}class Nt{constructor(t,e){this.game=t,this.newAStar=e,this.curr=null,this.dst=null,this.computeFinished=!0}static Mini(t,e,i=20){return new Nt(t,((s,r)=>new Bt(t.map(),t.miniMap(),s,r,e,i)))}nextTile(t,e,i=1){if(null==t)return F.error("curr is null"),{type:Ct.PathNotFound};if(null==e)return F.error("dst is null"),{type:Ct.PathNotFound};if(this.game.manhattanDist(t,e)<i)return{type:Ct.Completed,tile:t};if(this.computeFinished)return this.shouldRecompute(t,e)?(this.curr=t,this.dst=e,this.path=null,this.aStar=this.newAStar(t,e),this.computeFinished=!1,this.nextTile(t,e)):{type:Ct.NextTile,tile:this.path.shift()};switch(this.aStar.compute()){case Ct.Completed:return this.computeFinished=!0,this.path=this.aStar.reconstructPath(),this.path.shift(),this.nextTile(t,e);case Ct.Pending:return{type:Ct.Pending};case Ct.PathNotFound:return{type:Ct.PathNotFound}}}shouldRecompute(t,e){if(null==this.path||null==this.curr||null==this.dst)return!0;const i=this.game.manhattanDist(t,e);let s=10;return s=i>50?10:i>25?5:0,this.game.manhattanDist(this.dst,e)>s}}class Ft{constructor(t,e,i,s){this.spawn=t,this._owner=e,this.ownerUnit=i,this.target=s,this.active=!0,this.destroyAtTick=-1}init(t,e){this.pathFinder=new Ot(t,new $(t.ticks())),this.mg=t}tick(t){if(null==this.shell&&(this.shell=this._owner.buildUnit(f.Shell,0,this.spawn)),this.shell.isActive()){if(!this.target.isActive()||this.target.owner()==this.shell.owner()||-1!=this.destroyAtTick&&this.mg.ticks()>=this.destroyAtTick)return this.shell.delete(!1),void(this.active=!1);-1!=this.destroyAtTick||this.ownerUnit.isActive()||(this.destroyAtTick=this.mg.ticks()+this.mg.config().shellLifetime());for(let t=0;t<3;t++){const t=this.pathFinder.nextTile(this.shell.tile(),this.target.tile());if(!0===t)return this.active=!1,this.target.modifyHealth(-this.effectOnTarget()),void this.shell.delete(!1);this.shell.move(t)}}else this.active=!1}effectOnTarget(){return this.mg.config().unitInfo(f.Shell).damage}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class qt{constructor(t,e){this.ownerId=t,this.tile=e,this.active=!0,this.target=null,this.lastShellAttack=0,this.alreadySentShell=new Set}init(t,e){if(this.mg=t,!t.hasPlayer(this.ownerId))return console.warn(`DefensePostExectuion: owner ${this.ownerId} not found`),void(this.active=!1);this.player=t.player(this.ownerId)}shoot(){const t=this.mg.config().defensePostShellAttackRate();if(this.mg.ticks()-this.lastShellAttack>t&&(this.lastShellAttack=this.mg.ticks(),this.mg.addExecution(new Ft(this.post.tile(),this.post.owner(),this.post,this.target)),!this.target.hasHealth()))return this.alreadySentShell.add(this.target),void(this.target=null)}tick(t){if(null==this.post){const t=this.player.canBuild(f.DefensePost,this.tile);if(0==t)return F.warn("cannot build Defense Post"),void(this.active=!1);this.post=this.player.buildUnit(f.DefensePost,0,t)}this.post.isActive()?(this.player!=this.post.owner()&&(this.player=this.post.owner()),null==this.target||this.target.isActive()||(this.target=null)):this.active=!1}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class Ut{constructor(t,e,i,s,r=-1,n=0){this.type=t,this.senderID=e,this.dst=i,this.src=s,this.speed=r,this.waitTicks=n,this.active=!0}init(t,e){if(!t.hasPlayer(this.senderID))return console.warn(`NukeExecution: sender ${this.senderID} not found`),void(this.active=!1);this.mg=t,this.player=t.player(this.senderID),this.random=new $(e),-1==this.speed&&(this.speed=this.mg.config().defaultNukeSpeed()),this.pathFinder=new Ot(t,this.random)}target(){return this.mg.owner(this.dst)}tilesToDestroy(){const t=this.mg.config().nukeMagnitudes(this.nuke.type()),e=new $(this.mg.ticks()),i=t.inner*t.inner,s=t.outer*t.outer;return this.mg.bfs(this.dst,((t,r)=>{const n=this.mg.euclideanDistSquared(this.dst,r);return n<=s&&(n<=i||e.chance(2))}))}breakAlliances(t){const e=new Map;for(const i of t){const t=this.mg.owner(i);if(t.isPlayer()){const i=e.get(t)??0;e.set(t,i+1)}}for(const[t,i]of e)if(i>100&&this.nuke.type()!=f.MIRVWarhead){const e=this.player.allianceWith(t);null!=e&&this.player.breakAlliance(e),t!=this.player&&t.updateRelation(this.player,-100)}}tick(t){if(null!=this.nuke){if(!this.nuke.isActive())return F.log("Nuke destroyed before reaching target"),void(this.active=!1);if(this.waitTicks>0)this.waitTicks--;else for(let t=0;t<this.speed;t++){const t=this.pathFinder.nextTile(this.nuke.tile(),this.dst);if(!0===t)return void this.detonate();this.nuke.move(t)}}else{const t=this.src??this.player.canBuild(this.type,this.dst);if(0==t)return F.warn("cannot build Nuke"),void(this.active=!1);if(this.nuke=this.player.buildUnit(this.type,0,t,{detonationDst:this.dst}),this.mg.hasOwner(this.dst)){const t=this.mg.owner(this.dst);this.type==f.AtomBomb&&this.mg.displayMessage(`${this.player.name()} - atom bomb inbound`,v.ERROR,t.id()),this.type==f.HydrogenBomb&&this.mg.displayMessage(`${this.player.name()} - hydrogen bomb inbound`,v.ERROR,t.id()),this.mg.stats().increaseNukeCount(this.senderID,t.id(),this.nuke.type())}const e=this.player.units(f.MissileSilo).find((e=>e.tile()===t));e&&e.setCooldown(!0)}}detonate(){const t=this.mg.config().nukeMagnitudes(this.nuke.type()),e=this.tilesToDestroy();this.breakAlliances(e);for(const t of e){const e=this.mg.owner(t);e.isPlayer()&&(e.relinquish(t),e.removeTroops(this.mg.config().nukeDeathFactor(e.troops(),e.numTilesOwned())),e.removeWorkers(this.mg.config().nukeDeathFactor(e.workers(),e.numTilesOwned())),e.outgoingAttacks().forEach((t=>{const i=this.mg.config().nukeDeathFactor(t.troops(),e.numTilesOwned());t.setTroops(t.troops()-i)})),e.units(f.TransportShip).forEach((t=>{const i=this.mg.config().nukeDeathFactor(t.troops(),e.numTilesOwned());t.setTroops(t.troops()-i)}))),this.mg.isLand(t)&&this.mg.setFallout(t,!0)}const i=t.outer*t.outer;for(const t of this.mg.units())t.type()!=f.AtomBomb&&t.type()!=f.HydrogenBomb&&t.type()!=f.MIRVWarhead&&t.type()!=f.MIRV&&this.mg.euclideanDistSquared(this.dst,t.tile())<i&&t.delete();this.active=!1,this.nuke.delete(!1)}owner(){return this.player}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class $t{constructor(t,e){this.senderID=t,this.dst=e,this.active=!0,this.mirvRange=1500,this.warheadCount=350}init(t,e){if(!t.hasPlayer(this.senderID))return console.warn(`MIRVExecution: player ${this.senderID} not found`),void(this.active=!1);this.random=new $(t.ticks()+D(this.senderID)),this.mg=t,this.pathFinder=new Ot(t,this.random),this.player=t.player(this.senderID),this.targetPlayer=this.mg.owner(this.dst),this.mg.stats().increaseNukeCount(this.player.id(),this.targetPlayer.id(),f.MIRV)}tick(t){if(null==this.nuke){const t=this.player.canBuild(f.MIRV,this.dst);if(0==t)return F.warn("cannot build MIRV"),void(this.active=!1);this.nuke=this.player.buildUnit(f.MIRV,0,t);const e=Math.floor((this.mg.x(this.dst)+this.mg.x(this.mg.x(this.nuke.tile())))/2),i=Math.max(0,this.mg.y(this.dst)-500)+50;this.separateDst=this.mg.ref(e,i),this.mg.displayMessage(`⚠️⚠️⚠️ ${this.player.name()} - MIRV INBOUND ⚠️⚠️⚠️`,v.ERROR,this.targetPlayer.id())}for(let t=0;t<4;t++){const t=this.pathFinder.nextTile(this.nuke.tile(),this.separateDst);if(!0===t)return this.separate(),void(this.active=!1);this.nuke.move(t)}}separate(){const t=[this.dst];let e=1e3;for(;e>0&&t.length<this.warheadCount;){e--;const i=this.randomLand(this.dst,t);null!=i&&t.push(i)}console.log(`dsts: ${t.length}`),t.sort(((t,e)=>this.mg.manhattanDist(e,this.dst)-this.mg.manhattanDist(t,this.dst))),console.log(`got ${t.length} dsts!!`);for(const[e,i]of t.entries())this.mg.addExecution(new Ut(f.MIRVWarhead,this.senderID,i,this.nuke.tile(),15+Math.floor(e/this.warheadCount*5),this.random.nextInt(0,15)));if(this.targetPlayer.isPlayer()){const t=this.player.allianceWith(this.targetPlayer);null!=t&&this.player.breakAlliance(t),this.targetPlayer!=this.player&&this.targetPlayer.updateRelation(this.player,-100)}this.nuke.delete(!1)}randomLand(t,e){let i=0;const s=this.mirvRange*this.mirvRange;for(;i<100;){i++;const r=this.random.nextInt(this.mg.x(t)-this.mirvRange,this.mg.x(t)+this.mirvRange),n=this.random.nextInt(this.mg.y(t)-this.mirvRange,this.mg.y(t)+this.mirvRange);if(!this.mg.isValidCoord(r,n))continue;const a=this.mg.ref(r,n);if(this.mg.isLand(a)&&!(this.mg.euclideanDistSquared(a,t)>s)&&this.mg.owner(a)==this.targetPlayer){for(const t of e)this.mg.manhattanDist(a,t);return a}}return console.log("couldn't find place, giving up"),null}owner(){return this.player}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class Wt{constructor(t,e){this._owner=t,this.tile=e,this.active=!0}init(t,e){if(!t.hasPlayer(this._owner))return console.warn(`MissileSiloExecution: owner ${this._owner} not found`),void(this.active=!1);this.mg=t,this.player=t.player(this._owner)}tick(t){if(null==this.silo){const t=this.player.canBuild(f.MissileSilo,this.tile);if(!1===t)return F.warn(`player ${this.player} cannot build missile silo at ${this.tile}`),void(this.active=!1);this.silo=this.player.buildUnit(f.MissileSilo,0,t,{cooldownDuration:this.mg.config().SiloCooldown()}),this.player!=this.silo.owner()&&(this.player=this.silo.owner())}this.silo.isCooldown()&&0==this.silo.ticksLeftInCooldown(this.mg.config().SiloCooldown())&&this.silo.setCooldown(!1)}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class Ht{constructor(t,e,i,s){this._owner=t,this.srcPort=e,this._dstPort=i,this.pathFinder=s,this.active=!0,this.index=0,this.wasCaptured=!1}init(t,e){this.mg=t,this.origOwner=t.player(this._owner)}tick(t){if(null==this.tradeShip){const e=this.origOwner.canBuild(f.TradeShip,this.srcPort.tile());if(0==e)return F.warn("cannot build trade ship"),void(this.active=!1);this.tradeShip=this.origOwner.buildUnit(f.TradeShip,0,e,{dstPort:this._dstPort,lastSetSafeFromPirates:t})}if(!this.tradeShip.isActive())return void(this.active=!1);if(this.origOwner!=this.tradeShip.owner()&&(this.wasCaptured=!0),this._dstPort.owner().id()==this.srcPort.owner().id())return this.tradeShip.delete(!1),void(this.active=!1);if(!(this.wasCaptured||this._dstPort.isActive()&&this.tradeShip.owner().canTrade(this._dstPort.owner())))return this.tradeShip.delete(!1),void(this.active=!1);if(this.wasCaptured){const t=this.tradeShip.owner().units(f.Port).sort(I(this.mg,this.tradeShip));if(0==t.length)return this.tradeShip.delete(!1),void(this.active=!1);this._dstPort=t[0],this.tradeShip.setDstPort(this._dstPort)}const e=this.pathFinder.nextTile(this.tradeShip.tile(),this._dstPort.tile());switch(e.type){case Ct.Completed:this.complete();break;case Ct.Pending:this.tradeShip.move(this.tradeShip.tile());break;case Ct.NextTile:this.mg.isWater(e.tile)&&this.mg.isShoreline(e.tile)&&this.tradeShip.setSafeFromPirates(),this.tradeShip.move(e.tile);break;case Ct.PathNotFound:F.warn("captured trade ship cannot find route"),this.tradeShip.isActive()&&this.tradeShip.delete(!1),this.active=!1}}complete(){this.active=!1,this.tradeShip.delete(!1);const t=this.mg.config().tradeShipGold(this.mg.manhattanDist(this.srcPort.tile(),this._dstPort.tile()));this.wasCaptured?(this.tradeShip.owner().addGold(t),this.mg.displayMessage(`Received ${pt(t)} gold from ship captured from ${this.origOwner.displayName()}`,v.SUCCESS,this.tradeShip.owner().id())):(this.srcPort.owner().addGold(t),this._dstPort.owner().addGold(t),this.mg.displayMessage(`Received ${pt(t)} gold from trade with ${this.srcPort.owner().displayName()}`,v.SUCCESS,this._dstPort.owner().id()),this.mg.displayMessage(`Received ${pt(t)} gold from trade with ${this._dstPort.owner().displayName()}`,v.SUCCESS,this.srcPort.owner().id()))}isActive(){return this.active}activeDuringSpawnPhase(){return!1}dstPort(){return this._dstPort.tile()}}class Lt{constructor(t,e){this._owner=t,this.tile=e,this.active=!0}init(t,e){if(!t.hasPlayer(this._owner))return console.warn(`PortExecution: player ${this._owner} not found`),void(this.active=!1);this.mg=t,this.random=new $(t.ticks()),this.checkOffset=t.ticks()%10}tick(t){if(null==this.port){const t=this.tile,e=this.mg.player(this._owner),i=e.canBuild(f.Port,t);if(!1===i)return F.warn(`player ${e} cannot build port at ${this.tile}`),void(this.active=!1);this.port=e.buildUnit(f.Port,0,i)}if(!this.port.isActive())return void(this.active=!1);if(this._owner!=this.port.owner().id()&&(this._owner=this.port.owner().id()),(this.mg.ticks()+this.checkOffset)%10!=0)return;const e=this.mg.units(f.Port).length;if(!this.random.chance(this.mg.config().tradeShipSpawnRate(e)))return;const i=this.player().tradingPorts(this.port);if(0==i.length)return;const s=this.random.randElement(i),r=Nt.Mini(this.mg,2500);this.mg.addExecution(new Ht(this.player().id(),this.port,s,r))}isActive(){return this.active}activeDuringSpawnPhase(){return!1}player(){return this.port.owner()}}class Gt{constructor(t,e,i,s,r=12){this.spawn=t,this._owner=e,this.ownerUnit=i,this.target=s,this.speed=r,this.active=!0}init(t,e){this.pathFinder=new Ot(t,new $(t.ticks())),this.mg=t}tick(t){if(null==this.SAMMissile&&(this.SAMMissile=this._owner.buildUnit(f.SAMMissile,0,this.spawn)),!this.SAMMissile.isActive())return void(this.active=!1);const e=[f.AtomBomb,f.HydrogenBomb];if(!this.target.isActive()||!this.ownerUnit.isActive()||this.target.owner()==this.SAMMissile.owner()||!e.includes(this.target.type()))return this.SAMMissile.delete(!1),void(this.active=!1);for(let t=0;t<this.speed;t++){const t=this.pathFinder.nextTile(this.SAMMissile.tile(),this.target.tile());if(!0===t)return this.mg.displayMessage(`Missile intercepted ${this.target.type()}`,v.SUCCESS,this._owner.id()),this.active=!1,this.target.delete(),void this.SAMMissile.delete(!1);this.SAMMissile.move(t)}}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class Vt{constructor(t,e,i=null){this.ownerId=t,this.tile=e,this.sam=i,this.active=!0,this.searchRangeRadius=80,this.MIRVWarheadSearchRadius=400,this.MIRVWarheadProtectionRadius=50,null!=i&&(this.tile=i.tile())}init(t,e){if(this.mg=t,!t.hasPlayer(this.ownerId))return console.warn(`SAMLauncherExecution: owner ${this.ownerId} not found`),void(this.active=!1);this.player=t.player(this.ownerId)}getSingleTarget(){const t=this.mg.nearbyUnits(this.sam.tile(),this.searchRangeRadius,[f.AtomBomb,f.HydrogenBomb]).filter((({unit:t})=>t.owner()!==this.player&&!this.player.isFriendly(t.owner())));return t.sort(((t,e)=>{const{unit:i,distSquared:s}=t,{unit:r,distSquared:n}=e;return i.type()===f.HydrogenBomb&&r.type()!==f.HydrogenBomb?-1:i.type()!==f.HydrogenBomb&&r.type()===f.HydrogenBomb?1:s-n}))[0]?.unit??null}isHit(t,e){return t==f.AtomBomb||(t==f.MIRVWarhead?e<this.mg.config().samWarheadHittingChance():e<this.mg.config().samHittingChance())}tick(t){if(null==this.sam){const t=this.player.canBuild(f.SAMLauncher,this.tile);if(0==t)return F.warn("cannot build SAM Launcher"),void(this.active=!1);this.sam=this.player.buildUnit(f.SAMLauncher,0,t,{cooldownDuration:this.mg.config().SAMCooldown()})}if(!this.sam.isActive())return void(this.active=!1);this.player!=this.sam.owner()&&(this.player=this.sam.owner()),this.pseudoRandom||(this.pseudoRandom=new $(this.sam.id()));const e=this.mg.nearbyUnits(this.sam.tile(),this.MIRVWarheadSearchRadius,f.MIRVWarhead).map((({unit:t})=>t)).filter((t=>t.owner()!==this.player&&!this.player.isFriendly(t.owner()))).filter((t=>this.mg.manhattanDist(t.detonationDst(),this.sam.tile())<this.MIRVWarheadProtectionRadius));let i=null;if(0==e.length&&(i=this.getSingleTarget()),this.sam.isCooldown()&&0==this.sam.ticksLeftInCooldown(this.mg.config().SAMCooldown())&&this.sam.setCooldown(!1),(i&&!i.targetedBySAM()||e.length>0)&&!this.sam.isCooldown()){this.sam.setCooldown(!0);const t=e.length>0?f.MIRVWarhead:i.type(),s=this.pseudoRandom.next();this.isHit(t,s)?e.length>0?(this.mg.displayMessage(`${e.length} MIRV warheads intercepted`,v.SUCCESS,this.sam.owner().id()),e.forEach((t=>t.delete()))):(i.setTargetedBySAM(!0),this.mg.addExecution(new Gt(this.sam.tile(),this.sam.owner(),this.sam,i))):this.mg.displayMessage(`Missile failed to intercept ${t}`,v.ERROR,this.sam.owner().id())}}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class Kt{constructor(t,e){this.playerID=t,this.patrolCenterTile=e,this.active=!0,this.warship=null,this.mg=null,this.target=null,this.lastShellAttack=0,this.alreadySentShell=new Set}init(t,e){if(!t.hasPlayer(this.playerID))return console.log(`WarshipExecution: player ${this.playerID} not found`),void(this.active=!1);this.pathfinder=Nt.Mini(t,5e3),this._owner=t.player(this.playerID),this.mg=t,this.patrolTile=this.patrolCenterTile,this.random=new $(t.ticks())}goToMoveTarget(t){const e=this.pathfinder.nextTile(this.warship.tile(),t);switch(e.type){case Ct.Completed:return void this.warship.setMoveTarget(null);case Ct.NextTile:this.warship.move(e.tile);break;case Ct.Pending:break;case Ct.PathNotFound:F.log("path not found to target")}}shoot(){const t=this.mg.config().warshipShellAttackRate();if(this.mg.ticks()-this.lastShellAttack>t&&(this.lastShellAttack=this.mg.ticks(),this.mg.addExecution(new Ft(this.warship.tile(),this.warship.owner(),this.warship,this.target)),!this.target.hasHealth()))return this.alreadySentShell.add(this.target),void(this.target=null)}patrol(){if(this.warship.setWarshipTarget(this.target),null==this.target||this.target.type()!=f.TradeShip){const t=this.pathfinder.nextTile(this.warship.tile(),this.patrolTile);switch(t.type){case Ct.Completed:this.patrolTile=this.randomTile();break;case Ct.NextTile:this.warship.move(t.tile);break;case Ct.Pending:return;case Ct.PathNotFound:F.log("path not found to patrol tile"),this.patrolTile=this.randomTile()}}}tick(t){if(null==this.warship){const t=this._owner.canBuild(f.Warship,this.patrolTile);return 0==t?void(this.active=!1):void(this.warship=this._owner.buildUnit(f.Warship,0,t))}if(!this.warship.isActive())return void(this.active=!1);null==this.target||this.target.isActive()||(this.target=null);const e=this._owner.units(f.Port).length>0,i=this.mg.nearbyUnits(this.warship.tile(),this.mg.config().warshipTargettingRange(),[f.TransportShip,f.Warship,f.TradeShip]).filter((({unit:t})=>t.owner()!==this.warship.owner()&&t!==this.warship&&!t.owner().isFriendly(this.warship.owner())&&!this.alreadySentShell.has(t)&&(t.type()!==f.TradeShip||e&&t.dstPort()?.owner()!==this.warship.owner()&&!t.dstPort()?.owner().isFriendly(this.warship.owner())&&!0!==t.isSafeFromPirates())));if(this.target=i.sort(((t,e)=>{const{unit:i,distSquared:s}=t,{unit:r,distSquared:n}=e;return i.type()===f.Warship&&r.type()!==f.Warship?-1:i.type()!==f.Warship&&r.type()===f.Warship?1:i.type()===f.TransportShip&&r.type()!==f.TransportShip?-1:i.type()!==f.TransportShip&&r.type()===f.TransportShip?1:s-n}))[0]?.unit??null,this.warship.moveTarget()?(this.goToMoveTarget(this.warship.moveTarget()),this.target&&this.target.type()==f.TradeShip&&(this.target=null)):this.target&&this.target.type()==f.TradeShip||this.patrol(),null!=this.target&&this.target.isActive()&&this.target.owner()!=this._owner&&1!=this.target.isSafeFromPirates()){if(this.warship.setWarshipTarget(this.target),this.target)if(this.target.type()==f.TradeShip)for(let t=0;t<2;t++){const t=this.pathfinder.nextTile(this.warship.tile(),this.target.tile(),5);switch(t.type){case Ct.Completed:return this._owner.captureUnit(this.target),void(this.target=null);case Ct.NextTile:this.warship.move(t.tile);break;case Ct.Pending:break;case Ct.PathNotFound:F.log("path not found to target")}}else this.shoot()}else this.target=null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}randomTile(){let t=this.mg.config().warshipPatrolRange();const e=2*t;let i=0,s=0;for(;s<3;){const r=this.mg.x(this.patrolCenterTile)+this.random.nextInt(-t/2,t/2),n=this.mg.y(this.patrolCenterTile)+this.random.nextInt(-t/2,t/2);if(!this.mg.isValidCoord(r,n))continue;const a=this.mg.ref(r,n);if(this.mg.isOcean(a)&&!this.mg.isShoreline(a))return a;i++,i===e&&(s++,i=0,t+=Math.floor(t/2))}}}class zt{constructor(t,e,i){this.ownerId=t,this.tile=e,this.constructionType=i,this.active=!0}init(t,e){if(this.mg=t,!t.hasPlayer(this.ownerId))return console.warn(`ConstructionExecution: owner ${this.ownerId} not found`),void(this.active=!1);this.player=t.player(this.ownerId)}tick(t){if(null==this.construction){const t=this.mg.unitInfo(this.constructionType);if(null==t.constructionDuration)return this.completeConstruction(),void(this.active=!1);const e=this.player.canBuild(this.constructionType,this.tile);return 0==e?(F.warn(`cannot build ${this.constructionType}`),void(this.active=!1)):(this.construction=this.player.buildUnit(f.Construction,0,e),this.cost=this.mg.unitInfo(this.constructionType).cost(this.player),this.player.removeGold(this.cost),this.construction.setConstructionType(this.constructionType),void(this.ticksUntilComplete=t.constructionDuration))}if(this.construction.isActive()){if(this.player!=this.construction.owner()&&(this.player=this.construction.owner()),0==this.ticksUntilComplete)return this.player=this.construction.owner(),this.construction.delete(!1),this.player.addGold(this.cost),this.completeConstruction(),void(this.active=!1);this.ticksUntilComplete--}else this.active=!1}completeConstruction(){const t=this.player;switch(this.constructionType){case f.AtomBomb:case f.HydrogenBomb:this.mg.addExecution(new Ut(this.constructionType,t.id(),this.tile));break;case f.MIRV:this.mg.addExecution(new $t(t.id(),this.tile));break;case f.Warship:this.mg.addExecution(new Kt(t.id(),this.tile));break;case f.Port:this.mg.addExecution(new Lt(t.id(),this.tile));break;case f.MissileSilo:this.mg.addExecution(new Wt(t.id(),this.tile));break;case f.DefensePost:this.mg.addExecution(new qt(t.id(),this.tile));break;case f.SAMLauncher:this.mg.addExecution(new Vt(t.id(),this.tile));break;case f.City:this.mg.addExecution(new jt(t.id(),this.tile));break;default:throw Error(`unit type ${this.constructionType} not supported`)}}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class Yt{constructor(t,e,i){this.senderID=t,this.recipientID=e,this.gold=i,this.active=!0}init(t,e){return t.hasPlayer(this.senderID)?t.hasPlayer(this.recipientID)?(this.sender=t.player(this.senderID),this.recipient=t.player(this.recipientID),void(null==this.gold&&(this.gold=Math.round(this.sender.gold()/3)))):(console.warn(`DonateExecution recipient ${this.recipientID} not found`),void(this.active=!1)):(console.warn(`DonateExecution: sender ${this.senderID} not found`),void(this.active=!1))}tick(t){this.sender.canDonate(this.recipient)?(this.sender.donateGold(this.recipient,this.gold),this.recipient.updateRelation(this.sender,50)):F.warn(`cannot send gold from ${this.sender.name()} to ${this.recipient.name()}`),this.active=!1}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class Xt{constructor(t,e,i){this.senderID=t,this.recipientID=e,this.troops=i,this.active=!0}init(t,e){return t.hasPlayer(this.senderID)?t.hasPlayer(this.recipientID)?(this.sender=t.player(this.senderID),this.recipient=t.player(this.recipientID),void(null==this.troops&&(this.troops=t.config().defaultDonationAmount(this.sender)))):(console.warn(`DonateExecution recipient ${this.recipientID} not found`),void(this.active=!1)):(console.warn(`DonateExecution: sender ${this.senderID} not found`),void(this.active=!1))}tick(t){this.sender.canDonate(this.recipient)?(this.sender.donateTroops(this.recipient,this.troops),this.recipient.updateRelation(this.sender,50)):F.warn(`cannot send tropps from ${this.sender} to ${this.recipient}`),this.active=!1}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class Jt{constructor(t,e,i){this.player=t,this.targetID=e,this.action=i,this.active=!0}init(t,e){return t.hasPlayer(this.player.id())?t.hasPlayer(this.targetID)?void 0:(console.warn(`EmbargoExecution recipient ${this.targetID} not found`),void(this.active=!1)):(console.warn(`EmbargoExecution: sender ${this.player.id()} not found`),void(this.active=!1))}tick(t){"start"==this.action?this.player.addEmbargo(this.targetID):this.player.stopEmbargo(this.targetID),this.active=!1}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}function Qt(t,e,i){if(!t.isShore(i))return!1;const s=te(t,e,i);return null!=s&&s}function Zt(t,e){const i=t.playerBySmallID(t.ownerID(e));let s=null;return s=i.isPlayer()?te(t,i,e):function(t,e,i){const s=Array.from(t.bfs(e,_t(((e,i)=>!t.hasOwner(i)),Tt(e,i)))).filter((e=>t.isShore(e))).sort(((i,s)=>t.manhattanDist(e,i)-t.manhattanDist(e,s)));return 0==s.length?null:s[0]}(t,e,50),s}function te(t,e,i){const s=Array.from(e.borderTiles()).filter((e=>t.isShore(e)));return 0==s.length?null:s.reduce(((e,s)=>{const r=t.manhattanDist(i,e);return t.manhattanDist(i,s)<r?s:e}))}class ee{constructor(t,e,i,s,r){this.attackerID=t,this.targetID=e,this.ref=i,this.troops=s,this.src=r,this.ticksPerMove=1,this.active=!0}activeDuringSpawnPhase(){return!1}init(t,e){if(!t.hasPlayer(this.attackerID))return console.warn(`TransportShipExecution: attacker ${this.attackerID} not found`),void(this.active=!1);if(null!=this.targetID&&!t.hasPlayer(this.targetID))return console.warn(`TransportShipExecution: target ${this.targetID} not found`),void(this.active=!1);if(this.lastMove=e,this.mg=t,this.pathFinder=Nt.Mini(t,1e4,10),this.attacker=t.player(this.attackerID),this.targetID&&this.targetID!==t.terraNullius().id()&&t.displayMessage(`Naval invasion incoming from ${this.attacker.displayName()}`,v.WARN,this.targetID),this.attacker.units(f.TransportShip).length>=t.config().boatMaxNumber())return t.displayMessage(`No boats available, max ${t.config().boatMaxNumber()}`,v.WARN,this.attackerID),this.active=!1,void this.attacker.addTroops(this.troops);if(null==this.targetID||this.targetID==this.mg.terraNullius().id()?this.target=t.terraNullius():this.target=t.player(this.targetID),null==this.troops&&(this.troops=this.mg.config().boatAttackAmount(this.attacker,this.target)),this.troops=Math.min(this.troops,this.attacker.troops()),this.dst=Zt(this.mg,this.ref),null==this.dst)return F.warn(`${this.attacker} cannot send ship to ${this.target}, cannot find attack tile`),void(this.active=!1);const i=this.attacker.canBuild(f.TransportShip,this.dst);if(0==i)return F.warn("can't build transport ship"),void(this.active=!1);null==this.src?this.src=i:this.mg.owner(this.src)==this.attacker&&this.mg.isShore(this.src)||(console.warn(`src is not a shore tile or not owned by: ${this.attacker.name()}`),this.src=i),this.boat=this.attacker.buildUnit(f.TransportShip,this.troops,this.src)}tick(t){if(!this.active)return;if(!this.boat.isActive())return void(this.active=!1);if(t-this.lastMove<this.ticksPerMove)return;this.lastMove=t;const e=this.pathFinder.nextTile(this.boat.tile(),this.dst);switch(e.type){case Ct.Completed:return this.mg.owner(this.dst)==this.attacker?(this.attacker.addTroops(this.troops),this.boat.delete(!1),void(this.active=!1)):(this.target.isPlayer()&&this.attacker.isFriendly(this.target)?this.target.addTroops(this.troops):(this.attacker.conquer(this.dst),this.mg.addExecution(new mt(this.troops,this.attacker.id(),this.targetID,this.dst,!1))),this.boat.delete(!1),void(this.active=!1));case Ct.NextTile:this.boat.move(e.tile);break;case Ct.Pending:break;case Ct.PathNotFound:return F.warn("path not found tot dst"),this.boat.delete(!1),void(this.active=!1)}}owner(){return this.attacker}isActive(){return this.active}}class ie{constructor(t,e){this.nation=e,this.firstMove=!0,this.active=!0,this.behavior=null,this.player=null,this.lastEmojiSent=new Map,this.lastNukeSent=[],this.embargoMalusApplied=new Set,this.random=new $(D(e.playerInfo.id)+D(t)),this.attackRate=this.random.nextInt(40,80),this.attackTick=this.random.nextInt(0,this.attackRate),this.triggerRatio=this.random.nextInt(60,90)/100,this.reserveRatio=this.random.nextInt(30,60)/100,this.heckleEmoji=["🤡","😡"].map((t=>B.indexOf(t)))}init(t){this.mg=t,this.random.chance(10)}updateRelationsFromEmbargos(){this.mg.players().filter((t=>t.id()!=this.player.id())).forEach((t=>{t.hasEmbargoAgainst(this.player)&&!this.embargoMalusApplied.has(t.id())?(this.player.updateRelation(t,-20),this.embargoMalusApplied.add(t.id())):!t.hasEmbargoAgainst(this.player)&&this.embargoMalusApplied.has(t.id())&&(this.player.updateRelation(t,20),this.embargoMalusApplied.delete(t.id()))}))}handleEmbargoesToHostileNations(){this.mg.players().filter((t=>t.id()!=this.player.id())).forEach((t=>{this.player.relation(t)<=w.Hostile&&!this.player.hasEmbargoAgainst(t)?this.player.addEmbargo(t.id()):this.player.relation(t)>=w.Neutral&&this.player.hasEmbargoAgainst(t)&&this.player.stopEmbargo(t.id())}))}tick(t){if(t%this.attackRate==this.attackTick){if(this.mg.inSpawnPhase()){const t=this.randomLand();return null==t?void F.warn(`cannot spawn ${this.nation.playerInfo.name}`):void this.mg.addExecution(new Dt(this.nation.playerInfo,t))}if(null!=this.player||(this.player=this.mg.players().find((t=>t.id()==this.nation.playerInfo.id)),null!=this.player))if(this.player.isAlive()){if(null===this.behavior&&(this.behavior=new wt(this.random,this.mg,this.player,this.triggerRatio,this.reserveRatio)),this.firstMove)return this.firstMove=!1,void this.behavior.sendAttack(this.mg.terraNullius());this.player.troops()>1e5&&this.player.targetTroopRatio()>.7&&this.player.setTargetTroopRatio(.7),this.updateRelationsFromEmbargos(),this.behavior.handleAllianceRequests(),this.handleEnemies(),this.handleUnits(),this.handleEmbargoesToHostileNations(),this.maybeAttack()}else this.active=!1}}maybeAttack(){const t=Array.from(this.player.borderTiles()).flatMap((t=>this.mg.neighbors(t))).filter((t=>this.mg.isLand(t)&&this.mg.ownerID(t)!=this.player.smallID()));if(0==t.length)return void(this.random.chance(10)&&this.sendBoatRandomly());if(this.random.chance(20))return void this.sendBoatRandomly();const e=t.map((t=>this.mg.playerBySmallID(this.mg.ownerID(t))));if(e.filter((t=>!t.isPlayer())).length>0)return void this.behavior.sendAttack(this.mg.terraNullius());const i=e.filter((t=>t.isPlayer())).sort(((t,e)=>t.troops()-e.troops()));if(this.random.chance(20)){const t=this.random.randElement(i);if(this.player.canSendAllianceRequest(t))return void this.player.createAllianceRequest(t)}const s=this.random.chance(2)?i[0]:this.random.randElement(i);this.shouldAttack(s)&&this.behavior.sendAttack(s)}shouldAttack(t){return!this.player.isOnSameTeam(t)&&(this.player.isFriendly(t)?this.shouldDiscourageAttack(t)?this.random.chance(200):this.random.chance(50):!this.shouldDiscourageAttack(t)||this.random.chance(4))}shouldDiscourageAttack(t){if(t.isTraitor())return!1;const e=this.mg.config().gameConfig().difficulty;return e!=r.Hard&&e!=r.Impossible&&t.type()==M.Human}handleEnemies(){this.behavior.forgetOldEnemies(),this.behavior.checkIncomingAttacks(),this.behavior.assistAllies();const t=this.behavior.selectEnemy();t&&(this.maybeSendEmoji(t),this.maybeSendNuke(t),this.player.sharesBorderWith(t)?this.behavior.sendAttack(t):this.maybeSendBoatAttack(t))}maybeSendEmoji(t){if(t.type()!=M.Human)return;const e=this.lastEmojiSent.get(t)??-300;this.mg.ticks()-e<=300||(this.lastEmojiSent.set(t,this.mg.ticks()),this.mg.addExecution(new yt(this.player.id(),t.id(),this.random.randElement(this.heckleEmoji))))}maybeSendNuke(t){const e=this.player.units(f.MissileSilo);if(0==e.length||this.player.gold()<this.cost(f.AtomBomb)||t.type()==M.Bot||this.player.isOnSameTeam(t))return;const i=t.units(f.City,f.DefensePost,f.MissileSilo,f.Port,f.SAMLauncher),s=i.map((t=>t.tile())),r=new Array(10);for(let e=0;e<r.length;e++)r[e]=this.randTerritoryTile(t);const n=r.concat(s);let a=null,o=0;this.removeOldNukeEvents();t:for(const s of new Set(n)){if(null==s)continue;for(const e of this.mg.bfs(s,Tt(s,15)))if(this.mg.owner(e)!=t)continue t;if(!this.player.canBuild(f.AtomBomb,s))continue;const r=this.nukeTileScore(s,e,i);r>a&&(a=s,o=r)}null!=a&&this.sendNuke(a)}removeOldNukeEvents(){const t=this.mg.ticks();for(;this.lastNukeSent.length>0&&this.lastNukeSent[0][0]+500<t;)this.lastNukeSent.shift()}sendNuke(t){const e=this.mg.ticks();this.lastNukeSent.push([e,t]),this.mg.addExecution(new Ut(f.AtomBomb,this.player.id(),t))}nukeTileScore(t,e,i){const s=St(t,25,!1);let r=i.filter((t=>s(this.mg,t.tile()))).map((t=>{switch(t.type()){case f.City:return 25e3;case f.DefensePost:return 5e3;case f.MissileSilo:return 5e4;case f.Port:return 1e4;case f.SAMLauncher:return 5e3;default:return 0}})).reduce(((t,e)=>t+e),0);const n=e.map((t=>t.tile())),{x:a}=It(this.mg,n,[t]),o=this.mg.euclideanDistSquared(t,a);return r-=30*Math.sqrt(o),r-=this.lastNukeSent.filter((([t,e])=>s(this.mg,e))).map((t=>1e6)).reduce(((t,e)=>t+e),0),r}maybeSendBoatAttack(t){if(this.player.isOnSameTeam(t))return;const e=It(this.mg,Array.from(this.player.borderTiles()).filter((t=>this.mg.isOceanShore(t))),Array.from(t.borderTiles()).filter((t=>this.mg.isOceanShore(t))));null!=e&&this.mg.addExecution(new ee(this.player.id(),t.id(),e.y,this.player.troops()/5,null))}handleUnits(){if(0==this.player.units(f.Port).length&&this.player.gold()>this.cost(f.Port)){const t=Array.from(this.player.borderTiles()).filter((t=>this.mg.isOceanShore(t)));if(t.length>0){const e=this.random.randElement(t);this.mg.addExecution(new zt(this.player.id(),e,f.Port))}}else this.maybeSpawnStructure(f.City,2),this.maybeSpawnWarship()||this.maybeSpawnStructure(f.MissileSilo,1)}maybeSpawnStructure(t,e){if(this.player.units(t).length>=e)return;if(this.player.gold()<this.cost(t))return;const i=this.randTerritoryTile(this.player);null!=i&&0!=this.player.canBuild(t,i)&&this.mg.addExecution(new zt(this.player.id(),i,t))}maybeSpawnWarship(){if(!this.random.chance(50))return!1;const t=this.player.units(f.Port),e=this.player.units(f.Warship);if(t.length>0&&0==e.length&&this.player.gold()>this.cost(f.Warship)){const e=this.random.randElement(t),i=this.warshipSpawnTile(e.tile());return null!=i&&(0==this.player.canBuild(f.Warship,i)?(F.warn("cannot spawn destroyer"),!1):(this.mg.addExecution(new zt(this.player.id(),i,f.Warship)),!0))}return!1}randTerritoryTile(t){const e=A(this.mg,t.borderTiles());for(let i=0;i<100;i++){const i=this.random.nextInt(e.min.x,e.max.x),s=this.random.nextInt(e.min.y,e.max.y);if(!this.mg.isOnMap(new S(i,s)))continue;const r=this.mg.ref(i,s);if(this.mg.owner(r)==t)return r}return null}warshipSpawnTile(t){const e=250;for(let i=0;i<50;i++){const i=this.random.nextInt(this.mg.x(t)-e,this.mg.x(t)+e),s=this.random.nextInt(this.mg.y(t)-e,this.mg.y(t)+e);if(!this.mg.isValidCoord(i,s))continue;const r=this.mg.ref(i,s);if(this.mg.isOcean(r))return r}return null}cost(t){return this.mg.unitInfo(t).cost(this.player)}sendBoatRandomly(){const t=Array.from(this.player.borderTiles()).filter((t=>this.mg.isOceanShore(t)));if(0==t.length)return;const e=this.random.randElement(t),i=this.randOceanShoreTile(e,150);null!=i&&this.mg.addExecution(new ee(this.player.id(),this.mg.owner(i).id(),i,this.player.troops()/5,null))}randomLand(){let t=0;for(;t<50;){t++;const e=this.nation.spawnCell,i=this.random.nextInt(e.x-25,e.x+25),s=this.random.nextInt(e.y-25,e.y+25);if(!this.mg.isValidCoord(i,s))continue;const r=this.mg.ref(i,s);if(this.mg.isLand(r)&&!this.mg.hasOwner(r)){if(this.mg.terrainType(r)==b.Mountain&&this.random.chance(2))continue;return r}}return null}randOceanShoreTile(t,e){const i=this.mg.x(t),s=this.mg.y(t);for(let t=0;t<500;t++){const t=this.random.nextInt(i-e,i+e),r=this.random.nextInt(s-e,s+e);if(!this.mg.isValidCoord(t,r))continue;const n=this.mg.ref(t,r);if(!this.mg.isOceanShore(n))continue;const a=this.mg.owner(n);if(!a.isPlayer())return n;if(!a.isFriendly(this.player))return n}return null}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!0}}class se{constructor(t,e){this.unitId=t,this.position=e,this.active=!0}init(t,e){this.mg=t}tick(t){const e=this.mg.units().find((t=>t.id()==this.unitId));e?(e.setMoveTarget(this.position),this.active=!1):console.log("MoveWarshipExecution: warship is already dead")}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class re{isActive(){return!1}activeDuringSpawnPhase(){return!1}init(t,e){}tick(t){}owner(){return null}}class ne{constructor(t,e,i,s){this.senderID=t,this.recipientID=e,this.quickChatKey=i,this.variables=s,this.active=!0}init(t,e){return this.mg=t,t.hasPlayer(this.senderID)?t.hasPlayer(this.recipientID)?(this.sender=t.player(this.senderID),void(this.recipient=t.player(this.recipientID))):(F.warn(`QuickChatExecution: recipient ${this.recipientID} not found`),void(this.active=!1)):(F.warn(`QuickChatExecution: sender ${this.senderID} not found`),void(this.active=!1))}tick(t){const e=this.getMessageFromKey(this.quickChatKey,this.variables);this.mg.displayChat(e[1],e[0],this.variables,this.recipient.id(),!0,this.recipient.name()),this.mg.displayChat(e[1],e[0],this.variables,this.sender.id(),!1,this.recipient.name()),F.log(`[QuickChat] ${this.sender.name} → ${this.recipient.name}: ${e}`),this.active=!1}owner(){return this.sender}isActive(){return this.active}activeDuringSpawnPhase(){return!1}getMessageFromKey(t,e){return t.split(".")}}class ae{constructor(t,e){this.playerID=t,this.attackID=e,this.active=!0,this.retreatOrdered=!1}init(t,e){t.hasPlayer(this.playerID)?(this.mg=t,this.player=t.player(this.playerID),this.startTick=t.ticks()):console.warn(`RetreatExecution: player ${this.player.id()} not found`)}tick(t){this.retreatOrdered||(this.player.orderRetreat(this.attackID),this.retreatOrdered=!0),this.mg.ticks()>=this.startTick+20&&(this.player.executeRetreat(this.attackID),this.active=!1)}owner(){return this.player}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class oe{constructor(t,e){this.playerID=t,this.targetTroopsRatio=e,this.active=!0}init(t,e){t.hasPlayer(this.playerID)||console.warn(`SetTargetTRoopRatioExecution: player ${this.playerID} not found`),this.player=t.player(this.playerID)}tick(t){this.targetTroopsRatio<0||this.targetTroopsRatio>1?F.warn(`target troop ratio of ${this.targetTroopsRatio} for player ${this.player} invalid`):this.player.setTargetTroopRatio(this.targetTroopsRatio),this.active=!1}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class he{constructor(t,e){this.requestorID=t,this.targetID=e,this.active=!0}init(t,e){return t.hasPlayer(this.requestorID)?t.hasPlayer(this.targetID)?(this.requestor=t.player(this.requestorID),void(this.target=t.player(this.targetID))):(console.warn(`TargetPlayerExecution: target ${this.targetID} not found`),void(this.active=!1)):(console.warn(`TargetPlayerExecution: requestor ${this.requestorID} not found`),void(this.active=!1))}tick(t){this.requestor.canTarget(this.target)&&(this.requestor.target(this.target),this.target.updateRelation(this.requestor,-40)),this.active=!1}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class le{constructor(t,e,i){this.mg=t,this.gameID=e,this.clientID=i,this.random=null,this.random=new $(D(e)+1)}createExecs(t){return t.intents.map((t=>this.createExec(t)))}createExec(t){const e=this.mg.playerByClientID(t.clientID);if(!e)return console.warn(`player with clientID ${t.clientID} not found`),new re;const i=e.id();switch(t.type){case"attack":return new mt(t.troops,i,t.targetID,null);case"cancel_attack":return new ae(i,t.attackID);case"move_warship":return new se(t.unitId,t.tile);case"spawn":return new Dt(e.info(),this.mg.ref(t.x,t.y));case"boat":let s=null;return null==t.srcX&&null==t.srcY||(s=this.mg.ref(t.srcX,t.srcY)),new ee(i,t.targetID,this.mg.ref(t.dstX,t.dstY),t.troops,s);case"allianceRequest":return new lt(i,t.recipient);case"allianceRequestReply":return new ct(t.requestor,i,t.accept);case"breakAlliance":return new ut(i,t.recipient);case"targetPlayer":return new he(i,t.target);case"emoji":return new yt(i,t.recipient,t.emoji);case"donate_troops":return new Xt(i,t.recipient,t.troops);case"donate_gold":return new Yt(i,t.recipient,t.gold);case"troop_ratio":return new oe(i,t.ratio);case"embargo":return new Jt(e,t.targetID,t.action);case"build_unit":return new zt(i,this.mg.ref(t.x,t.y),t.unit);case"quick_chat":return new ne(i,t.recipient,t.quickChatKey,t.variables??{});default:throw new Error(`intent type ${t} not found`)}}spawnBots(t){return new Pt(this.mg,this.gameID).spawnBots(t)}fakeHumanExecutions(){const t=[];for(const e of this.mg.nations())t.push(new ie(this.gameID,e));return t}}class ce{constructor(){this.active=!0}init(t,e){this.mg=t}tick(t){t%10==0&&(this.mg.config().gameConfig().gameMode==m.FFA?this.checkWinnerFFA():this.checkWinnerTeam())}checkWinnerFFA(){const t=this.mg.players().sort(((t,e)=>e.numTilesOwned()-t.numTilesOwned()));if(0==t.length)return;const e=t[0],i=this.mg.numLandTiles()-this.mg.numTilesWithFallout();e.numTilesOwned()/i*100>this.mg.config().percentageTilesOwnedToWin()&&(this.mg.setWinner(e,this.mg.stats().stats()),console.log(`${e.name()} has won the game`),this.active=!1)}checkWinnerTeam(){const t=new Map;for(const e of this.mg.players())t.set(e.team(),(t.get(e.team())??0)+e.numTilesOwned());const e=Array.from(t.entries()).sort(((t,e)=>e[1]-t[1]));if(0==e.length)return;const i=e[0],s=this.mg.numLandTiles()-this.mg.numTilesWithFallout();if(i[1]/s*100>this.mg.config().percentageTilesOwnedToWin()){if(i[0]==d)return;this.mg.setWinner(i[0],this.mg.stats().stats()),console.log(`${i[0]} has won the game`),this.active=!1}}owner(){return null}isActive(){return this.active}activeDuringSpawnPhase(){return!1}}class ue{constructor(t,e,i,s){this.mg=t,this.requestor_=e,this.recipient_=i,this.createdAtTick_=s}other(t){return this.requestor_==t?this.recipient_:this.requestor_}requestor(){return this.requestor_}recipient(){return this.recipient_}createdAt(){return this.createdAtTick_}expire(){this.mg.expireAlliance(this)}}!function(t){t[t.Tile=0]="Tile",t[t.Unit=1]="Unit",t[t.Player=2]="Player",t[t.DisplayEvent=3]="DisplayEvent",t[t.DisplayChatEvent=4]="DisplayChatEvent",t[t.AllianceRequest=5]="AllianceRequest",t[t.AllianceRequestReply=6]="AllianceRequestReply",t[t.BrokeAlliance=7]="BrokeAlliance",t[t.AllianceExpired=8]="AllianceExpired",t[t.TargetPlayer=9]="TargetPlayer",t[t.Emoji=10]="Emoji",t[t.Win=11]="Win",t[t.Hash=12]="Hash"}(Et||(Et={}));class de{constructor(t,e,i,s){this.requestor_=t,this.recipient_=e,this.tickCreated=i,this.game=s}requestor(){return this.requestor_}recipient(){return this.recipient_}createdAt(){return this.tickCreated}accept(){this.game.acceptAllianceRequest(this)}reject(){this.game.rejectAllianceRequest(this)}toUpdate(){return{type:Et.AllianceRequest,requestorID:this.requestor_.smallID(),recipientID:this.recipient_.smallID(),createdAt:this.tickCreated}}}var ge=i(6720);const pe=new ge.mV({...ge.zp.build(),...ge.I0}),me=["NicePeopleOnly","BeKindPlz","LearningManners","StayClassy","BeNicer","NeedHugs","MakeFriends"];class fe{constructor(t,e,i,s,r){this._id=t,this._target=e,this._attacker=i,this._troops=s,this._sourceTile=r,this._isActive=!0,this._retreating=!1,this._retreated=!1}sourceTile(){return this._sourceTile}target(){return this._target}attacker(){return this._attacker}troops(){return this._troops}setTroops(t){this._troops=t}isActive(){return this._isActive}id(){return this._id}delete(){this._target.isPlayer()&&(this._target._incomingAttacks=this._target._incomingAttacks.filter((t=>t!=this))),this._attacker._outgoingAttacks=this._attacker._outgoingAttacks.filter((t=>t!=this)),this._isActive=!1}orderRetreat(){this._retreating=!0}executeRetreat(){this._retreated=!0}retreating(){return this._retreating}retreated(){return this._retreated}}class ye{constructor(t,e,i,s,r,n,a={}){this._type=t,this.mg=e,this._tile=i,this._troops=s,this._id=r,this._owner=n,this._active=!0,this._lastTile=null,this._target=null,this._moveTarget=null,this._targetedBySAM=!1,this._constructionType=void 0,this._cooldownTick=null,this._dstPort=null,this._detonationDst=null,this._warshipTarget=null,this._cooldownDuration=null,this._health=C(this.mg.unitInfo(t).maxHealth??1),this._lastTile=i,this._dstPort=a.dstPort,this._detonationDst=a.detonationDst,this._warshipTarget=a.warshipTarget,this._cooldownDuration=a.cooldownDuration,this._lastSetSafeFromPirates=a.lastSetSafeFromPirates,this._safeFromPiratesCooldown=this.mg.config().safeFromPiratesCooldownMax()}id(){return this._id}toUpdate(){const t=this.warshipTarget(),e=this.dstPort();return{type:Et.Unit,unitType:this._type,id:this._id,troops:this._troops,ownerID:this._owner.smallID(),isActive:this._active,pos:this._tile,lastPos:this._lastTile,health:this.hasHealth()?Number(this._health):void 0,constructionType:this._constructionType,dstPortId:e?e.id():null,warshipTargetId:t?t.id():null,detonationDst:this.detonationDst(),ticksLeftInCooldown:this.ticksLeftInCooldown(this._cooldownDuration)}}type(){return this._type}lastTile(){return this._lastTile}move(t){if(null==t)throw new Error("tile cannot be null");this.mg.removeUnit(this),this._lastTile=this._tile,this._tile=t,this.mg.addUnit(this),this.mg.addUpdate(this.toUpdate())}setTroops(t){this._troops=t}troops(){return this._troops}health(){return Number(this._health)}hasHealth(){return null!=this.info().maxHealth}tile(){return this._tile}owner(){return this._owner}info(){return this.mg.unitInfo(this._type)}setOwner(t){const e=this._owner;e._units=e._units.filter((t=>t!=this)),this._owner=t,this.mg.addUpdate(this.toUpdate()),this.mg.displayMessage(`Your ${this.type()} was captured by ${t.displayName()}`,v.ERROR,e.id())}modifyHealth(t){var e,i;this._health=(e=this._health+C(t),i=C(this.info().maxHealth??1),R(E(e,0n),i))}delete(t=!0){if(!this.isActive())throw new Error(`cannot delete ${this} not active`);this._owner._units=this._owner._units.filter((t=>t!=this)),this._active=!1,this.mg.addUpdate(this.toUpdate()),this.mg.removeUnit(this),t&&this.type()!=f.MIRVWarhead&&this.mg.displayMessage(`Your ${this.type()} was destroyed`,v.ERROR,this.owner().id())}isActive(){return this._active}constructionType(){if(this.type()!=f.Construction)throw new Error(`Cannot get construction type on ${this.type()}`);return this._constructionType}setConstructionType(t){if(this.type()!=f.Construction)throw new Error(`Cannot set construction type on ${this.type()}`);this._constructionType=t,this.mg.addUpdate(this.toUpdate())}hash(){return this.tile()+D(this.type())*this._id}toString(){return`Unit:${this._type},owner:${this.owner().name()}`}setWarshipTarget(t){this._warshipTarget=t}warshipTarget(){return this._warshipTarget}detonationDst(){return this._detonationDst}dstPort(){return this._dstPort}setCooldown(t){t?(this._cooldownTick=this.mg.ticks(),this.mg.addUpdate(this.toUpdate())):(this._cooldownTick=null,this.mg.addUpdate(this.toUpdate()))}ticksLeftInCooldown(t){return Math.max(0,t-(this.mg.ticks()-this._cooldownTick))}isCooldown(){return!!this._cooldownTick}setDstPort(t){this._dstPort=t}setMoveTarget(t){this._moveTarget=t}moveTarget(){return this._moveTarget}setTargetedBySAM(t){this._targetedBySAM=t}targetedBySAM(){return this._targetedBySAM}setSafeFromPirates(){this._lastSetSafeFromPirates=this.mg.ticks()}isSafeFromPirates(){return this.mg.ticks()-this._lastSetSafeFromPirates<this._safeFromPiratesCooldown}}class we{constructor(t,e){this.recipient=t,this.tick=e}}class be{constructor(t,e,i,s,r){this.mg=t,this._smallID=e,this.playerInfo=i,this._team=r,this._lastTileChange=0,this.markedTraitorTick=-1,this.embargoes=new Set,this._borderTiles=new Set,this._units=[],this._tiles=new Set,this.pastOutgoingAllianceRequests=[],this.targets_=[],this.outgoingEmojis_=[],this.sentDonations=[],this.relations=new Map,this._incomingAttacks=[],this._outgoingAttacks=[],this._outgoingLandAttacks=[],this._hasSpawned=!1,this._flag=i.flag,this._name=i.name.replace(/[^a-zA-Z0-9_\[\] 🐈🍀]/gu,"").slice(0,27).padEnd(3,"x"),this._targetTroopRatio=95n,this._troops=C(s),this._workers=0n,this._gold=0n,this._displayName=this._name,this._pseudo_random=new $(D(this.playerInfo.id))}toUpdate(){const t=this.outgoingAllianceRequests().map((t=>t.recipient().id()));return{type:Et.Player,clientID:this.clientID(),flag:this.flag(),name:this.name(),displayName:this.displayName(),id:this.id(),team:this.team(),smallID:this.smallID(),playerType:this.type(),isAlive:this.isAlive(),tilesOwned:this.numTilesOwned(),gold:Number(this._gold),population:this.population(),workers:this.workers(),troops:this.troops(),targetTroopRatio:this.targetTroopRatio(),allies:this.alliances().map((t=>t.other(this).smallID())),embargoes:this.embargoes,isTraitor:this.isTraitor(),targets:this.targets().map((t=>t.smallID())),outgoingEmojis:this.outgoingEmojis(),outgoingAttacks:this._outgoingAttacks.map((t=>({attackerID:t.attacker().smallID(),targetID:t.target().smallID(),troops:t.troops(),id:t.id(),retreating:t.retreating()}))),incomingAttacks:this._incomingAttacks.map((t=>({attackerID:t.attacker().smallID(),targetID:t.target().smallID(),troops:t.troops(),id:t.id(),retreating:t.retreating()}))),outgoingAllianceRequests:t,stats:this.mg.stats().getPlayerStats(this.id()),hasSpawned:this.hasSpawned()}}smallID(){return this._smallID}flag(){return this._flag}name(){return this._name}displayName(){return this._displayName}clientID(){return this.playerInfo.clientID}id(){return this.playerInfo.id}type(){return this.playerInfo.playerType}clan(){return this.playerInfo.clan}units(...t){if(0==t.length)return this._units;const e=new Set(t);return this._units.filter((t=>e.has(t.type())))}unitsIncludingConstruction(t){const e=this.units(t);return e.push(...this.units(f.Construction).filter((e=>e.constructionType()==t))),e}sharesBorderWith(t){for(const e of this._borderTiles)for(const i of this.mg.map().neighbors(e))if(this.mg.map().ownerID(i)==t.smallID())return!0;return!1}numTilesOwned(){return this._tiles.size}tiles(){return new Set(this._tiles.values())}borderTiles(){return this._borderTiles}neighbors(){const t=new Set;for(const e of this.borderTiles())for(const i of this.mg.map().neighbors(e))if(this.mg.map().isLand(i)){const e=this.mg.map().ownerID(i);e!=this.smallID()&&t.add(this.mg.playerBySmallID(e))}return Array.from(t)}isPlayer(){return!0}setTroops(t){this._troops=C(t)}conquer(t){this.mg.conquer(this,t)}orderRetreat(t){const e=this._outgoingAttacks.filter((e=>e.id()==t));e&&e[0]?e[0].orderRetreat():F.warn(`Didn't find outgoing attack with id ${t}`)}executeRetreat(t){const e=this._outgoingAttacks.filter((e=>e.id()==t));e&&e[0]&&e[0].executeRetreat()}relinquish(t){if(this.mg.owner(t)!=this)throw new Error("Cannot relinquish tile not owned by this player");this.mg.relinquish(t)}info(){return this.playerInfo}isAlive(){return this._tiles.size>0}hasSpawned(){return this._hasSpawned}setHasSpawned(t){this._hasSpawned=t}incomingAllianceRequests(){return this.mg.allianceRequests.filter((t=>t.recipient()==this))}outgoingAllianceRequests(){return this.mg.allianceRequests.filter((t=>t.requestor()==this))}alliances(){return this.mg.alliances_.filter((t=>t.requestor()==this||t.recipient()==this))}allies(){return this.alliances().map((t=>t.other(this)))}isAlliedWith(t){return t!=this&&null!=this.allianceWith(t)}allianceWith(t){return t==this?null:this.alliances().find((e=>e.recipient()==t||e.requestor()==t))}canSendAllianceRequest(t){if(t==this)return!1;if(this.isFriendly(t))return!1;if(null!=this.incomingAllianceRequests().find((e=>e.requestor()==t))||null!=this.outgoingAllianceRequests().find((e=>e.recipient()==t)))return!1;const e=this.pastOutgoingAllianceRequests.filter((e=>e.recipient()==t)).sort(((t,e)=>e.createdAt()-t.createdAt()));return 0==e.length||this.mg.ticks()-e[0].createdAt()>=this.mg.config().allianceRequestCooldown()}breakAlliance(t){this.mg.breakAlliance(this,t)}isTraitor(){return this.markedTraitorTick>=0&&this.mg.ticks()-this.markedTraitorTick<this.mg.config().traitorDuration()}markTraitor(){this.markedTraitorTick=this.mg.ticks()}createAllianceRequest(t){if(this.isAlliedWith(t))throw new Error("cannot create alliance request, already allies");return this.mg.createAllianceRequest(this,t)}relation(t){if(t==this)throw new Error(`cannot get relation with self: ${this}`);return this.relations.has(t)?this.relationFromValue(this.relations.get(t)):w.Neutral}relationFromValue(t){return t<-50?w.Hostile:t<0?w.Distrustful:t<50?w.Neutral:w.Friendly}allRelationsSorted(){return Array.from(this.relations,(([t,e])=>({player:t,relation:e}))).sort(((t,e)=>t.relation-e.relation)).map((t=>({player:t.player,relation:this.relationFromValue(t.relation)})))}updateRelation(t,e){if(t==this)throw new Error(`cannot update relation with self: ${this}`);let i=0;this.relations.has(t)&&(i=this.relations.get(t));const s=_(i+e,-100,100);this.relations.set(t,s)}decayRelations(){this.relations.forEach(((t,e)=>{t+=-1*Math.sign(t)*.05,Math.abs(t)<.1&&(t=0),this.relations.set(e,t)}))}canTarget(t){if(this==t)return!1;if(this.isFriendly(t))return!1;for(const t of this.targets_)if(this.mg.ticks()-t.tick<this.mg.config().targetCooldown())return!1;return!0}target(t){this.targets_.push({tick:this.mg.ticks(),target:t}),this.mg.target(this,t)}targets(){return this.targets_.filter((t=>this.mg.ticks()-t.tick<this.mg.config().targetDuration())).map((t=>t.target))}transitiveTargets(){const t=this.alliances().map((t=>t.other(this))).flatMap((t=>t.targets()));return t.push(...this.targets()),[...new Set(t)]}sendEmoji(t,e){if(t==this)throw Error(`Cannot send emoji to oneself: ${this}`);const i={message:e,senderID:this.smallID(),recipientID:t==s?t:t.smallID(),createdAt:this.mg.ticks()};this.outgoingEmojis_.push(i),this.mg.sendEmojiUpdate(i)}outgoingEmojis(){return this.outgoingEmojis_.filter((t=>this.mg.ticks()-t.createdAt<this.mg.config().emojiMessageDuration())).sort(((t,e)=>e.createdAt-t.createdAt))}canSendEmoji(t){const e=t==s?s:t.smallID(),i=this.outgoingEmojis_.filter((t=>t.recipientID==e));for(const t of i)if(this.mg.ticks()-t.createdAt<this.mg.config().emojiMessageCooldown())return!1;return!0}canDonate(t){if(!this.isFriendly(t))return!1;for(const e of this.sentDonations)if(e.recipient==t&&this.mg.ticks()-e.tick<this.mg.config().donateCooldown())return!1;return!0}donateTroops(t,e){this.sentDonations.push(new we(t,this.mg.ticks())),t.addTroops(this.removeTroops(e)),this.mg.displayMessage(`Sent ${gt(e)} troops to ${t.name()}`,v.INFO,this.id()),this.mg.displayMessage(`Received ${gt(e)} troops from ${this.name()}`,v.SUCCESS,t.id())}donateGold(t,e){this.sentDonations.push(new we(t,this.mg.ticks())),t.addGold(this.removeGold(e)),this.mg.displayMessage(`Sent ${pt(e)} gold to ${t.name()}`,v.INFO,this.id()),this.mg.displayMessage(`Received ${pt(e)} gold from ${this.name()}`,v.SUCCESS,t.id())}hasEmbargoAgainst(t){return this.embargoes.has(t.id())}canTrade(t){return!(t.hasEmbargoAgainst(this)||this.hasEmbargoAgainst(t))&&t.id()!=this.id()}addEmbargo(t){this.embargoes.add(t)}stopEmbargo(t){this.embargoes.delete(t)}tradingPartners(){return this.mg.players().filter((t=>t!=this&&this.canTrade(t)))}team(){return this._team}isOnSameTeam(t){return t!=this&&null!=this.team()&&null!=t.team()&&this.team()!=d&&t.team()!=d&&this._team==t.team()}isFriendly(t){return this.isOnSameTeam(t)||this.isAlliedWith(t)}gold(){return Number(this._gold)}addGold(t){this._gold+=C(t)}removeGold(t){if(t<=1)return 0;const e=R(this._gold,C(t));return this._gold-=e,Number(e)}population(){return Number(this._troops+this._workers)}workers(){return Math.max(1,Number(this._workers))}addWorkers(t){this._workers+=C(t)}removeWorkers(t){this._workers=E(1n,this._workers-C(t))}targetTroopRatio(){return Number(this._targetTroopRatio)/100}setTargetTroopRatio(t){if(t<0||t>1)throw new Error(`invalid targetTroopRatio ${t} set on player ${be}`);this._targetTroopRatio=C(100*t)}troops(){return Number(this._troops)}addTroops(t){t<0?this.removeTroops(-1*t):this._troops+=C(t)}removeTroops(t){if(t<=1)return 0;const e=R(this._troops,C(t));return this._troops-=e,Number(e)}captureUnit(t){if(t.owner()==this)throw new Error(`Cannot capture unit, ${this} already owns ${t}`);const e=t.owner();e._units=e._units.filter((e=>e!=t)),t._owner=this,this._units.push(t),this.mg.addUpdate(t.toUpdate()),this.mg.displayMessage(`${t.type()} captured by ${this.displayName()}`,v.ERROR,e.id()),this.mg.displayMessage(`Captured ${t.type()} from ${e.displayName()}`,v.SUCCESS,this.id())}buildUnit(t,e,i,s={}){if(this.mg.config().isUnitDisabled(t))throw new Error(`Attempted to build disabled unit ${t} at tile ${i} by player ${this.name()}`);const r=this.mg.unitInfo(t).cost(this),n=new ye(t,this.mg,i,e,this.mg.nextUnitID(),this,s);return this._units.push(n),this.removeGold(r),this.removeTroops(e),this.mg.addUpdate(n.toUpdate()),this.mg.addUnit(n),n}buildableUnits(t){const e=this.validStructureSpawnTiles(t);return Object.values(f).map((i=>({type:i,canBuild:!this.mg.inSpawnPhase()&&this.canBuild(i,t,e),cost:this.mg.config().unitInfo(i).cost(this)})))}canBuild(t,e,i=null){if(this.mg.config().isUnitDisabled(t))return!1;const s=this.mg.unitInfo(t).cost(this);if(!this.isAlive()||this.gold()<s)return!1;switch(t){case f.MIRV:return!!this.mg.hasOwner(e)&&this.nukeSpawn(e);case f.AtomBomb:case f.HydrogenBomb:return this.nukeSpawn(e);case f.MIRVWarhead:return e;case f.Port:return this.portSpawn(e,i);case f.Warship:return this.warshipSpawn(e);case f.Shell:case f.SAMMissile:return e;case f.TransportShip:return function(t,e,i){if(e.units(f.TransportShip).length>=t.config().boatMaxNumber())return!1;const s=Zt(t,i);if(null==s)return!1;const r=t.owner(i);if(r==e)return!1;if(r.isPlayer()&&e.isFriendly(r))return!1;if(t.isOceanShore(s)){let n=!1;for(const i of e.borderTiles())if(t.isOceanShore(i)){n=!0;break}let a=!1;if(t.hasOwner(i)){for(const e of r.borderTiles())if(t.isOceanShore(e)){a=!0;break}}else a=!0;return!(!n||!a)&&Qt(t,e,s)}const n=t.bfs(s,_t(Tt(s,300),((e,i)=>t.isLake(i)||t.isShore(i)))),a=Array.from(n).sort(((e,i)=>t.manhattanDist(s,e)-t.manhattanDist(s,i)));for(const i of a)if(t.owner(i)==e)return Qt(t,e,i);return!1}(this.mg,this,e);case f.TradeShip:return this.tradeShipSpawn(e);case f.MissileSilo:case f.DefensePost:case f.SAMLauncher:case f.City:case f.Construction:return this.landBasedStructureSpawn(e,i);default:j(t)}}nukeSpawn(t){const e=this.mg.owner(t);if(e.isPlayer()&&this.isOnSameTeam(e))return!1;const i=this.units(f.MissileSilo).filter((t=>!t.isCooldown())).sort(I(this.mg,t));return 0!=i.length&&i[0].tile()}portSpawn(t,e){const i=Array.from(this.mg.bfs(t,Tt(t,this.mg.config().radiusPortSpawn()))).filter((t=>this.mg.owner(t)==this&&this.mg.isOceanShore(t))).sort(((e,i)=>this.mg.manhattanDist(e,t)-this.mg.manhattanDist(i,t))),s=new Set(e??this.validStructureSpawnTiles(t));for(const t of i)if(s.has(t))return t;return!1}warshipSpawn(t){if(!this.mg.isOcean(t))return!1;const e=this.units(f.Port).sort(((e,i)=>this.mg.manhattanDist(e.tile(),t)-this.mg.manhattanDist(i.tile(),t)));return 0!=e.length&&e[0].tile()}landBasedStructureSpawn(t,e=null){const i=e??this.validStructureSpawnTiles(t);return 0!=i.length&&i[0]}validStructureSpawnTiles(t){if(this.mg.owner(t)!=this)return[];const e=Object.values(f).filter((t=>this.mg.config().unitInfo(t).territoryBound)),i=this.mg.nearbyUnits(t,30,e).map((t=>t.unit)),s=this.mg.bfs(t,((e,i)=>this.mg.euclideanDistSquared(t,i)<225&&e.ownerID(i)==this.smallID())),r=new Set(s),n=this.mg.config().structureMinDist()**2;for(const t of s)for(const e of i)if(this.mg.euclideanDistSquared(e.tile(),t)<n){r.delete(t);break}const a=Array.from(r);return a.sort(((e,i)=>this.mg.euclideanDistSquared(e,t)-this.mg.euclideanDistSquared(i,t))),a}tradeShipSpawn(t){const e=this.units(f.Port).filter((e=>e.tile()==t));return 0!=e.length&&e[0].tile()}lastTileChange(){return this._lastTileChange}hash(){return D(this.id())*(this.population()+this.numTilesOwned())+this._units.reduce(((t,e)=>t+e.hash()),0)}toString(){return`Player:{name:${this.info().name},clientID:${this.info().clientID},isAlive:${this.isAlive()},troops:${this._troops},numTileOwned:${this.numTilesOwned()}}]`}playerProfile(){return{relations:Object.fromEntries(this.allRelationsSorted().map((({player:t,relation:e})=>[t.smallID(),e]))),alliances:this.alliances().map((t=>t.other(this).smallID()))}}createAttack(t,e,i){const s=new fe(this._pseudo_random.nextID(),t,this,e,i);return this._outgoingAttacks.push(s),t.isPlayer()&&t._incomingAttacks.push(s),s}outgoingAttacks(){return this._outgoingAttacks}incomingAttacks(){return this._incomingAttacks}canAttack(t){if(this.mg.hasOwner(t)&&this.mg.config().numSpawnPhaseTurns()+this.mg.config().spawnImmunityDuration()>this.mg.ticks())return!1;if(this.mg.owner(t)==this)return!1;if(this.mg.hasOwner(t)){const e=this.mg.owner(t);if(this.isFriendly(e))return!1}if(!this.mg.isLand(t))return!1;if(this.mg.hasOwner(t))return this.sharesBorderWith(this.mg.owner(t));for(const e of this.mg.bfs(t,_t(((t,e)=>!t.hasOwner(e)&&t.isLand(e)),Tt(t,200))))for(const t of this.mg.neighbors(e))if(this.mg.owner(t)==this)return!0;return!1}bestTransportShipSpawn(t){return function(t,e,i){if(null==(i=Zt(t,i)))return!1;const s=function(t,e,i){let s=1/0,r=1/0,n=1/0,a=-1/0,o=-1/0,h=null;const l={minX:null,minY:null,maxX:null,maxY:null},c=Array.from(e.borderTiles()).filter((e=>t.isShore(e)));for(const e of c){const c=t.manhattanDist(e,i),u=t.cell(e);c<s&&(s=c,h=e),u.x<r?(r=u.x,l.minX=e):u.y<n?(n=u.y,l.minY=e):u.x>a?(a=u.x,l.maxX=e):u.y>o&&(o=u.y,l.maxY=e)}const u=Math.max(10,Math.ceil(c.length/50)),d=c.filter(((t,e)=>e%u==0));return[h,l.minX,l.minY,l.maxX,l.maxY,...d].filter(Boolean)}(t,e,i),r=new Bt(t,t.miniMap(),s,i,5e5,1),n=r.compute();if(n!=Ct.Completed)return console.warn(`bestShoreDeploymentSource: path not found: ${n}`),!1;const a=r.reconstructPath();if(0==a.length)return!1;const o=a[0],h=t.neighbors(o).filter((i=>t.isShore(i)&&t.owner(i)==e));return 0!=h.length&&h[0]}(this.mg,this,t)}tradingPorts(t){const e=this.mg.players().filter((e=>e!=t.owner()&&e.canTrade(t.owner()))).flatMap((t=>t.units(f.Port))).sort(((e,i)=>this.mg.manhattanDist(t.tile(),e.tile())-this.mg.manhattanDist(t.tile(),i.tile())));for(let t=0;t<this.mg.config().proximityBonusPortsNb(e.length);t++)e.push(e[t]);return this.mg.players().filter((e=>e!=t.owner()&&e.canTrade(t.owner()))).filter((e=>e.isAlliedWith(t.owner()))).flatMap((t=>t.units(f.Port))).forEach((t=>e.push(t))),e}}class Me{constructor(){this.data={}}_createUserData(t,e){this.data[t]||(this.data[t]={sentNukes:{}}),this.data[t].sentNukes[e]||(this.data[t].sentNukes[e]={[f.MIRV]:0,[f.MIRVWarhead]:0,[f.AtomBomb]:0,[f.HydrogenBomb]:0})}increaseNukeCount(t,e,i){this._createUserData(t,e),this.data[t].sentNukes[e][i]++}getPlayerStats(t){return this.data[t]}stats(){return this.data}}class ve{constructor(){}smallID(){return 0}clientID(){return"TERRA_NULLIUS_CLIENT_ID"}id(){return null}isPlayer(){return!1}}class ke{constructor(t){this.gm=t,this.cellSize=100,this.grid=Array(Math.ceil(t.height()/this.cellSize)).fill(null).map((()=>Array(Math.ceil(t.width()/this.cellSize)).fill(null).map((()=>new Set))))}getGridCoords(t,e){return[Math.floor(t/this.cellSize),Math.floor(e/this.cellSize)]}addUnit(t){const e=t.tile(),[i,s]=this.getGridCoords(this.gm.x(e),this.gm.y(e));this.isValidCell(i,s)&&this.grid[s][i].add(t)}removeUnit(t){const e=t.tile(),[i,s]=this.getGridCoords(this.gm.x(e),this.gm.y(e));this.isValidCell(i,s)&&this.grid[s][i].delete(t)}isValidCell(t,e){return t>=0&&t<this.grid[0].length&&e>=0&&e<this.grid.length}nearbyUnits(t,e,i){const s=this.gm.x(t),r=this.gm.y(t),[n,a]=this.getGridCoords(s,r),o=Math.ceil(e/this.cellSize),h=[],l=Math.max(0,n-o),c=Math.min(this.grid[0].length-1,n+o),u=Math.max(0,a-o),d=Math.min(this.grid.length-1,a+o),g=e*e,p=Array.isArray(i)?new Set(i):new Set([i]);for(let t=u;t<=d;t++)for(let e=l;e<=c;e++)for(const i of this.grid[t][e])if(i.isActive()){const t=this.gm.x(i.tile())-s,e=this.gm.y(i.tile())-r,n=t*t+e*e;n<=g&&p.has(i.type())&&h.push({unit:i,distSquared:n})}return h}}class Se{constructor(t,e,i,s,r){this._humans=t,this._nations=e,this._map=i,this.miniGameMap=s,this._config=r,this._ticks=0,this.unInitExecs=[],this._players=new Map,this._playersBySmallID=[],this.execs=[],this.allianceRequests=[],this.alliances_=[],this.nextPlayerID=1,this._nextUnitID=1,this.updates=Te(),this._stats=new Me,this.playerTeams=[n,a],this.botTeam=d,this._terraNullius=new ve,this._width=i.width(),this._height=i.height(),this.unitGrid=new ke(this._map),r.gameConfig().gameMode===m.Team&&this.populateTeams(),this.addPlayers()}populateTeams(){if("Duos"===this._config.playerTeams()){this.playerTeams=[];const t=Math.ceil((this._humans.length+this._nations.length)/2);for(let e=0;e<t;e++)this.playerTeams.push("Team "+(e+1))}else{const t=this._config.playerTeams();if(t<2)throw new Error(`Too few teams: ${t}`);if(t>=3&&this.playerTeams.push(l),t>=4&&this.playerTeams.push(u),t>=5&&this.playerTeams.push(h),t>=6&&this.playerTeams.push(c),t>=7&&this.playerTeams.push(o),t>=8)throw new Error(`Too many teams: ${t}`)}}addPlayers(){if(this.config().gameConfig().gameMode!=m.Team)return this._humans.forEach((t=>this.addPlayer(t))),void this._nations.forEach((t=>this.addPlayer(t.playerInfo)));const t=function(t,e){const i=new Map,s=new Map,r=new Map,n=[];for(const e of t)e.clan?(r.has(e.clan)||r.set(e.clan,[]),r.get(e.clan).push(e)):n.push(e);const a=Math.ceil(t.length/e.length),o=Array.from(r.entries()).sort(((t,e)=>e[1].length-t[1].length));for(const[t,r]of o){let t=null,n=0;for(const i of e){const e=s.get(i)??0;null!==t&&n<=e||(n=e,t=i)}for(const e of r)n<a?(n++,i.set(e,t)):i.set(e,"kicked");s.set(t,n)}for(const t of n){let r=null,n=0;for(const t of e){const e=s.get(t)??0;null!==r&&n<=e||(n=e,r=t)}s.set(r,n+1),i.set(t,r)}return i}([...this._humans,...this._nations.map((t=>t.playerInfo))],this.playerTeams);for(const[e,i]of t.entries())"kicked"!=i?this.addPlayer(e,i):console.warn(`Player ${e.name} was kicked from team`)}isOnEdgeOfMap(t){return this._map.isOnEdgeOfMap(t)}owner(t){return this.playerBySmallID(this.ownerID(t))}playerBySmallID(t){return 0==t?this.terraNullius():this._playersBySmallID[t-1]}map(){return this._map}miniMap(){return this.miniGameMap}addUpdate(t){this.updates[t.type].push(t)}nextUnitID(){const t=this._nextUnitID;return this._nextUnitID++,t}setFallout(t,e){if(e&&this.hasOwner(t))throw Error(`cannot set fallout, tile ${t} has owner`);this._map.hasFallout(t)||(this._map.setFallout(t,e),this.addUpdate({type:Et.Tile,update:this.toTileUpdate(t)}))}units(...t){return Array.from(this._players.values()).flatMap((e=>e.units(...t)))}unitInfo(t){return this.config().unitInfo(t)}nations(){return this._nations}createAllianceRequest(t,e){if(t.isAlliedWith(e))return void F.log("cannot request alliance, already allied");if(null!=e.incomingAllianceRequests().find((e=>e.requestor()==t)))return void F.log(`duplicate alliance request from ${t.name()}`);const i=t.incomingAllianceRequests().find((t=>t.requestor()==e));if(null!=i)return F.log("got corresponding alliance requests, accepting"),void i.accept();const s=new de(t,e,this._ticks,this);return this.allianceRequests.push(s),this.addUpdate(s.toUpdate()),s}acceptAllianceRequest(t){this.allianceRequests=this.allianceRequests.filter((e=>e!=t));const e=new ue(this,t.requestor(),t.recipient(),this._ticks);this.alliances_.push(e),t.requestor().pastOutgoingAllianceRequests.push(t),this.addUpdate({type:Et.AllianceRequestReply,request:t.toUpdate(),accepted:!0})}rejectAllianceRequest(t){this.allianceRequests=this.allianceRequests.filter((e=>e!=t)),t.requestor().pastOutgoingAllianceRequests.push(t),this.addUpdate({type:Et.AllianceRequestReply,request:t.toUpdate(),accepted:!1})}hasPlayer(t){return this._players.has(t)}config(){return this._config}inSpawnPhase(){return this._ticks<=this.config().numSpawnPhaseTurns()}ticks(){return this._ticks}executeNextTick(){this.updates=Te(),this.execs.forEach((t=>{!t.isActive()||this.inSpawnPhase()&&!t.activeDuringSpawnPhase()||t.tick(this._ticks)}));const t=[],e=[];this.unInitExecs.forEach((i=>{!this.inSpawnPhase()||i.activeDuringSpawnPhase()?(i.init(this,this._ticks),t.push(i)):e.push(i)})),this.removeInactiveExecutions(),this.execs.push(...t),this.unInitExecs=e;for(const t of this._players.values())this.addUpdate(t.toUpdate());return this.ticks()%10==0&&this.addUpdate({type:Et.Hash,tick:this.ticks(),hash:this.hash()}),this._ticks++,this.updates}hash(){let t=1;return this._players.forEach((e=>{t+=e.hash()})),t}terraNullius(){return this._terraNullius}removeInactiveExecutions(){const t=[];for(const e of this.execs)this.inSpawnPhase()?e.activeDuringSpawnPhase()?e.isActive()&&t.push(e):t.push(e):e.isActive()&&t.push(e);this.execs=t}players(){return Array.from(this._players.values()).filter((t=>t.isAlive()))}allPlayers(){return Array.from(this._players.values())}executions(){return[...this.execs,...this.unInitExecs]}addExecution(...t){this.unInitExecs.push(...t)}removeExecution(t){this.execs=this.execs.filter((e=>e!==t)),this.unInitExecs=this.unInitExecs.filter((e=>e!==t))}playerView(t){return this.player(t)}addPlayer(t,e=null){const i=new be(this,this.nextPlayerID,t,this.config().startManpower(t),e??this.maybeAssignTeam(t));return this._playersBySmallID.push(i),this.nextPlayerID++,this._players.set(t.id,i),i}maybeAssignTeam(t){if(this._config.gameConfig().gameMode!=m.Team)return null;if(t.playerType==M.Bot)return this.botTeam;const e=D(t.id);return this.playerTeams[e%this.playerTeams.length]}player(t){if(!this._players.has(t))throw new Error(`Player with id ${t} not found`);return this._players.get(t)}playerByClientID(t){for(const[,e]of this._players)if(e.clientID()==t)return e;return null}isOnMap(t){return t.x>=0&&t.x<this._width&&t.y>=0&&t.y<this._height}neighborsWithDiag(t){const e=this.x(t),i=this.y(t),s=[];for(let t=-1;t<=1;t++)for(let r=-1;r<=1;r++){if(0===t&&0===r)continue;const n=e+t,a=i+r;n>=0&&n<this._width&&a>=0&&a<this._height&&s.push(this._map.ref(n,a))}return s}conquer(t,e){if(!this.isLand(e))throw Error("cannot conquer water");const i=this.owner(e);i.isPlayer()&&(i._lastTileChange=this._ticks,i._tiles.delete(e),i._borderTiles.delete(e)),this._map.setOwnerID(e,t.smallID()),t._tiles.add(e),t._lastTileChange=this._ticks,this.updateBorders(e),this._map.setFallout(e,!1),this.addUpdate({type:Et.Tile,update:this.toTileUpdate(e)})}relinquish(t){if(!this.hasOwner(t))throw new Error("Cannot relinquish tile because it is unowned");if(this.isWater(t))throw new Error("Cannot relinquish water");const e=this.owner(t);e._lastTileChange=this._ticks,e._tiles.delete(t),e._borderTiles.delete(t),this._map.setOwnerID(t,0),this.updateBorders(t),this.addUpdate({type:Et.Tile,update:this.toTileUpdate(t)})}updateBorders(t){const e=[];e.push(t),this.neighbors(t).forEach((t=>e.push(t)));for(const t of e)this.hasOwner(t)&&(this.calcIsBorder(t)?this.owner(t)._borderTiles.add(t):this.owner(t)._borderTiles.delete(t))}calcIsBorder(t){if(!this.hasOwner(t))return!1;for(const e of this.neighbors(t))if(this.owner(t)!=this.owner(e))return!0;return!1}target(t,e){this.addUpdate({type:Et.TargetPlayer,playerID:t.smallID(),targetID:e.smallID()})}breakAlliance(t,e){let i=null;if(i=e.requestor()==t?e.recipient():e.requestor(),!t.isAlliedWith(i))throw new Error(`${t} not allied with ${i}, cannot break alliance`);i.isTraitor()||t.markTraitor();const s=new Set(t.alliances()),r=i.alliances().filter((t=>s.has(t)));if(1!=r.length)throw new Error(`must have exactly one alliance, have ${r.length}`);this.alliances_=this.alliances_.filter((t=>t!=r[0])),this.addUpdate({type:Et.BrokeAlliance,traitorID:t.smallID(),betrayedID:i.smallID()})}expireAlliance(t){const e=new Set(t.recipient().alliances()),i=t.requestor().alliances().filter((t=>e.has(t)));if(1!=i.length)throw new Error(`cannot expire alliance: must have exactly one alliance, have ${i.length}`);this.alliances_=this.alliances_.filter((t=>t!=i[0])),this.addUpdate({type:Et.AllianceExpired,player1ID:t.requestor().smallID(),player2ID:t.recipient().smallID()})}sendEmojiUpdate(t){this.addUpdate({type:Et.Emoji,emoji:t})}setWinner(t,e){this.addUpdate({type:Et.Win,winner:"string"==typeof t?t:t.smallID(),winnerType:"string"==typeof t?"team":"player",allPlayersStats:e})}teams(){return this._config.gameConfig().gameMode!=m.Team?[]:[this.botTeam,...this.playerTeams]}displayMessage(t,e,i){let s=null;null!=i&&(s=this.player(i).smallID()),this.addUpdate({type:Et.DisplayEvent,messageType:e,message:t,playerID:s})}displayChat(t,e,i={},s,r=null,n){let a=null;null!=s&&(a=this.player(s).smallID()),this.addUpdate({type:Et.DisplayChatEvent,key:t,category:e,variables:i,playerID:a,isFrom:r,recipient:n})}addUnit(t){this.unitGrid.addUnit(t)}removeUnit(t){this.unitGrid.removeUnit(t)}nearbyUnits(t,e,i){return this.unitGrid.nearbyUnits(t,e,i)}ref(t,e){return this._map.ref(t,e)}x(t){return this._map.x(t)}y(t){return this._map.y(t)}cell(t){return this._map.cell(t)}width(){return this._map.width()}height(){return this._map.height()}numLandTiles(){return this._map.numLandTiles()}isValidCoord(t,e){return this._map.isValidCoord(t,e)}isLand(t){return this._map.isLand(t)}isOceanShore(t){return this._map.isOceanShore(t)}isOcean(t){return this._map.isOcean(t)}isShoreline(t){return this._map.isShoreline(t)}magnitude(t){return this._map.magnitude(t)}ownerID(t){return this._map.ownerID(t)}hasOwner(t){return this._map.hasOwner(t)}setOwnerID(t,e){return this._map.setOwnerID(t,e)}hasFallout(t){return this._map.hasFallout(t)}isBorder(t){return this._map.isBorder(t)}neighbors(t){return this._map.neighbors(t)}isWater(t){return this._map.isWater(t)}isLake(t){return this._map.isLake(t)}isShore(t){return this._map.isShore(t)}cost(t){return this._map.cost(t)}terrainType(t){return this._map.terrainType(t)}forEachTile(t){return this._map.forEachTile(t)}manhattanDist(t,e){return this._map.manhattanDist(t,e)}euclideanDistSquared(t,e){return this._map.euclideanDistSquared(t,e)}bfs(t,e){return this._map.bfs(t,e)}toTileUpdate(t){return this._map.toTileUpdate(t)}updateTile(t){return this._map.updateTile(t)}numTilesWithFallout(){return this._map.numTilesWithFallout()}stats(){return this._stats}}const Te=()=>{const t={};return Object.values(Et).filter((t=>!isNaN(Number(t)))).forEach((e=>{t[e]=[]})),t},_e={[g.World]:"WorldMap",[g.Europe]:"Europe",[g.Mena]:"Mena",[g.NorthAmerica]:"NorthAmerica",[g.Oceania]:"Oceania",[g.BlackSea]:"BlackSea",[g.Africa]:"Africa",[g.Pangaea]:"Pangaea",[g.Asia]:"Asia",[g.Mars]:"Mars",[g.SouthAmerica]:"SouthAmerica",[g.Britannia]:"Britannia",[g.GatewayToTheAtlantic]:"GatewayToTheAtlantic",[g.Australia]:"Australia",[g.Iceland]:"Iceland",[g.Japan]:"Japan",[g.BetweenTwoSeas]:"BetweenTwoSeas",[g.KnownWorld]:"KnownWorld",[g.FaroeIslands]:"FaroeIslands",[g.DeglaciatedAntarctica]:"DeglaciatedAntarctica",[g.EuropeClassic]:"EuropeClassic",[g.FalklandIslands]:"FalklandIslands",[g.Baikal]:"Baikal"},Ie=new class{constructor(){this.maps=new Map,this.loadingPromises=new Map}async getMapData(t){const e=this.maps.get(t);if(e?.bin&&e?.nationMap)return e;this.loadingPromises.has(t)||this.loadingPromises.set(t,this.loadMapData(t));const i=await this.loadingPromises.get(t);return this.maps.set(t,i),i}async loadMapData(t){const e=_e[t];if(!e)throw new Error(`No file name mapping found for map: ${t}`);const[s,r,n]=await Promise.all([i(6360)(`./${e}.bin`),i(5327)(`./${e}Mini.bin`),i(8597)(`./${e}.json`)]);return{mapBin:s.default,miniMapBin:r.default,nationMap:n.default}}isMapLoaded(t){const e=this.maps.get(t);return!!e?.bin&&!!e?.nationMap}getLoadedMaps(){return Array.from(this.maps.keys()).filter((t=>this.isMapLoaded(t)))}},De=new Map;async function Ae(t){const e=t.charCodeAt(1)<<8|t.charCodeAt(0),i=t.charCodeAt(3)<<8|t.charCodeAt(2);if(t.length!=e*i+4)throw new Error(`Invalid data: buffer size ${t.length} incorrect for ${e}x${i} terrain plus 4 bytes for dimensions.`);const s=new Uint8Array(e*i);let r=0;for(let n=0;n<e*i;n++){const e=t.charCodeAt(n+4);s[n]=e,128&e&&r++}return new kt(e,i,s,r)}async function xe(t,e,i){const s=await ht(t.config,null),r=await async function(t){if(De.has(t))return De.get(t);const e=await Ie.getMapData(t),i=await Ae(e.mapBin),s=await Ae(e.miniMapBin),r={nationMap:e.nationMap,gameMap:i,miniGameMap:s};return De.set(t,r),r}(t.config.gameMap),n=new $(D(t.gameID)),a=function(t,e,i,s,r){return new Se(t,e,i,s,r)}(t.players.map((t=>{return new T(t.flag,t.clientID==e?P(t.username):function(t){return pe.hasMatch(t)||t.toLowerCase().includes("nig")}(i=P(t.username))?me[D(i)%me.length]:i,M.Human,t.clientID,t.playerID);var i})),t.config.disableNPCs?[]:r.nationMap.nations.map((t=>new k(new S(t.coordinates[0],t.coordinates[1]),t.strength,new T(t.flag||"",t.name,M.FakeHuman,null,n.nextID())))),r.gameMap,r.miniGameMap,s),o=new Pe(a,new le(a,t.gameID,e),i);return o.init(),o}class Pe{constructor(t,e,i){this.game=t,this.execManager=e,this.callBack=i,this.turns=[],this.currTurn=0,this.isExecuting=!1,this.playerViewData={}}init(){this.game.config().bots()>0&&this.game.addExecution(...this.execManager.spawnBots(this.game.config().numBots())),this.game.config().spawnNPCs()&&this.game.addExecution(...this.execManager.fakeHumanExecutions()),this.game.addExecution(new ce)}addTurn(t){this.turns.push(t)}executeNextTick(){if(this.isExecuting)return;if(this.currTurn>=this.turns.length)return;let t;this.isExecuting=!0,this.game.addExecution(...this.execManager.createExecs(this.turns[this.currTurn])),this.currTurn++;try{t=this.game.executeNextTick()}catch(t){if(t instanceof Error)return console.error("Game tick error:",t.message),void this.callBack({errMsg:t.message,stack:t.stack})}this.game.inSpawnPhase()&&this.game.ticks()%2==0&&this.game.players().filter((t=>t.type()==M.Human||t.type()==M.FakeHuman)).forEach((t=>this.playerViewData[t.id()]=O(this.game,t))),(this.game.ticks()<3||this.game.ticks()%30==0)&&this.game.players().forEach((t=>{this.playerViewData[t.id()]=O(this.game,t)}));const e=t[Et.Tile].map((t=>t.update));t[Et.Tile]=[],this.callBack({tick:this.game.ticks(),packedTileUpdates:new BigUint64Array(e),updates:t,playerNameViewData:this.playerViewData}),this.isExecuting=!1}playerActions(t,e,i){const r=this.game.player(t),n=this.game.ref(e,i),a={canAttack:r.canAttack(n),buildableUnits:r.buildableUnits(n),canSendEmojiAllPlayers:r.canSendEmoji(s)};if(this.game.hasOwner(n)){const t=this.game.owner(n);a.interaction={sharedBorder:r.sharesBorderWith(t),canSendEmoji:r.canSendEmoji(t),canTarget:r.canTarget(t),canSendAllianceRequest:r.canSendAllianceRequest(t),canBreakAlliance:r.isAlliedWith(t),canDonate:r.canDonate(t),canEmbargo:!r.hasEmbargoAgainst(t)}}return a}playerProfile(t){const e=this.game.playerBySmallID(t);if(!e.isPlayer())throw new Error(`player with id ${t} not found`);return e.playerProfile()}playerBorderTiles(t){const e=this.game.player(t);if(!e.isPlayer())throw new Error(`player with id ${t} not found`);return{borderTiles:e.borderTiles()}}bestTransportShipSpawn(t,e){const i=this.game.player(t);if(!i.isPlayer())throw new Error(`player with id ${t} not found`);return i.bestTransportShipSpawn(e)}}const je=self;let Ce=null;function Ee(t){Re({type:"game_update",gameUpdate:t})}function Re(t){je.postMessage(t)}je.addEventListener("message",(async t=>{const e=t.data;switch(e.type){case"heartbeat":(await Ce).executeNextTick();break;case"init":try{Ce=xe(e.gameStartInfo,e.clientID,Ee).then((t=>(Re({type:"initialized",id:e.id}),t)))}catch(t){throw console.error("Failed to initialize game runner:",t),t}break;case"turn":if(!Ce)throw new Error("Game runner not initialized");try{const t=await Ce;await t.addTurn(e.turn)}catch(t){throw console.error("Failed to process turn:",t),t}break;case"player_actions":if(!Ce)throw new Error("Game runner not initialized");try{const t=(await Ce).playerActions(e.playerID,e.x,e.y);Re({type:"player_actions_result",id:e.id,result:t})}catch(t){throw console.error("Failed to check borders:",t),t}break;case"player_profile":if(!Ce)throw new Error("Game runner not initialized");try{const t=(await Ce).playerProfile(e.playerID);Re({type:"player_profile_result",id:e.id,result:t})}catch(t){throw console.error("Failed to check borders:",t),t}break;case"player_border_tiles":if(!Ce)throw new Error("Game runner not initialized");try{const t=(await Ce).playerBorderTiles(e.playerID);Re({type:"player_border_tiles_result",id:e.id,result:t})}catch(t){throw console.error("Failed to get border tiles:",t),t}break;case"transport_ship_spawn":if(!Ce)throw new Error("Game runner not initialized");try{const t=(await Ce).bestTransportShipSpawn(e.playerID,e.targetTile);Re({type:"transport_ship_spawn_result",id:e.id,result:t})}catch(t){console.error("Failed to spawn transport ship:",t)}break;default:console.warn("Unknown message :",e)}})),je.addEventListener("error",(t=>{console.error("Worker error:",t)})),je.addEventListener("unhandledrejection",(t=>{console.error("Unhandled promise rejection in worker:",t)}))},6360:(t,e,i)=>{var s={"./Africa.bin":[9305,9305],"./AfricaMini.bin":[1668,1668],"./Asia.bin":[7105,7105],"./AsiaMini.bin":[3212,3212],"./Australia.bin":[6273,6273],"./AustraliaMini.bin":[76,76],"./Baikal.bin":[4223,4223],"./BaikalMini.bin":[6798,6798],"./BetweenTwoSeas.bin":[1169,1169],"./BetweenTwoSeasMini.bin":[6652,6652],"./BlackSea.bin":[5017,5017],"./BlackSeaMini.bin":[7284,7284],"./Britannia.bin":[6213,6213],"./BritanniaMini.bin":[6464,6464],"./DeglaciatedAntarctica.bin":[9622,9622],"./DeglaciatedAntarcticaMini.bin":[1239,1239],"./Europe.bin":[6689,6689],"./EuropeClassic.bin":[3566,1185],"./EuropeClassicMini.bin":[5164,5164],"./EuropeMini.bin":[3996,3996],"./FalklandIslands.bin":[8480,8480],"./FalklandIslandsMini.bin":[1477,1477],"./FaroeIslands.bin":[9648,9648],"./FaroeIslandsMini.bin":[9509,9509],"./GatewayToTheAtlantic.bin":[1677,1677],"./GatewayToTheAtlanticMini.bin":[4872,4872],"./Iceland.bin":[1253,1253],"./IcelandMini.bin":[7200,7200],"./Japan.bin":[2295,2295],"./JapanMini.bin":[6406,6406],"./KnownWorld.bin":[1984,1984],"./KnownWorldMini.bin":[4965,4965],"./Mars.bin":[612,612],"./MarsMini.bin":[2425,2425],"./Mena.bin":[6354,6354],"./MenaMini.bin":[4947,4947],"./NorthAmerica.bin":[8628,8628],"./NorthAmericaMini.bin":[4745,4745],"./Oceania.bin":[8643,8643],"./OceaniaMini.bin":[357,2738],"./Pangaea.bin":[5240,5240],"./PangaeaMini.bin":[8141,8141],"./SouthAmerica.bin":[5618,5618],"./SouthAmericaMini.bin":[8883,8883],"./WorldMap.bin":[149,149],"./WorldMapMini.bin":[9008,9008]};function r(t){if(!i.o(s,t))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=s[t],r=e[0];return i.e(e[1]).then((()=>i.t(r,23)))}r.keys=()=>Object.keys(s),r.id=6360,t.exports=r},8597:(t,e,i)=>{var s={"./Africa.json":[5786,5786],"./Asia.json":[226,226],"./Australia.json":[9381,1762],"./Baikal.json":[2616,2616],"./BetweenTwoSeas.json":[6346,6346],"./BlackSea.json":[7046,7046],"./Britannia.json":[9174,9174],"./DeglaciatedAntarctica.json":[1479,1479],"./Europe.json":[1694,1694],"./EuropeClassic.json":[5306,5306],"./FalklandIslands.json":[5493,5493],"./FaroeIslands.json":[5161,5161],"./GatewayToTheAtlantic.json":[3054,3054],"./Iceland.json":[5294,5294],"./Japan.json":[9620,9620],"./KnownWorld.json":[8729,8729],"./Mars.json":[5421,5421],"./Mena.json":[3131,3131],"./NorthAmerica.json":[7145,7145],"./Oceania.json":[2460,2460],"./Pangaea.json":[853,853],"./SouthAmerica.json":[8967,8967],"./WorldMap.json":[7662,7662]};function r(t){if(!i.o(s,t))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=s[t],r=e[0];return i.e(e[1]).then((()=>i.t(r,19)))}r.keys=()=>Object.keys(s),r.id=8597,t.exports=r}},n={};function a(t){var e=n[t];if(void 0!==e)return e.exports;var i=n[t]={exports:{}};return r[t].call(i.exports,i,i.exports,a),i.exports}a.m=r,a.x=()=>{var t=a.O(void 0,[8096],(()=>a(6040)));return a.O(t)},t=[],a.O=(e,i,s,r)=>{if(!i){var n=1/0;for(c=0;c<t.length;c++){for(var[i,s,r]=t[c],o=!0,h=0;h<i.length;h++)(!1&r||n>=r)&&Object.keys(a.O).every((t=>a.O[t](i[h])))?i.splice(h--,1):(o=!1,r<n&&(n=r));if(o){t.splice(c--,1);var l=s();void 0!==l&&(e=l)}}return e}r=r||0;for(var c=t.length;c>0&&t[c-1][2]>r;c--)t[c]=t[c-1];t[c]=[i,s,r]},i=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,a.t=function(t,s){if(1&s&&(t=this(t)),8&s)return t;if("object"==typeof t&&t){if(4&s&&t.__esModule)return t;if(16&s&&"function"==typeof t.then)return t}var r=Object.create(null);a.r(r);var n={};e=e||[null,i({}),i([]),i(i)];for(var o=2&s&&t;"object"==typeof o&&!~e.indexOf(o);o=i(o))Object.getOwnPropertyNames(o).forEach((e=>n[e]=()=>t[e]));return n.default=()=>t,a.d(r,n),r},a.d=(t,e)=>{for(var i in e)a.o(e,i)&&!a.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},a.f={},a.e=t=>Promise.all(Object.keys(a.f).reduce(((e,i)=>(a.f[i](t,e),e)),[])),a.u=t=>"js/"+(8096===t?"vendors":t)+"."+{76:"3f6d89b2e82278d38b5e",149:"9c98942944e7ccc4b5a4",226:"508b9d4b47985648883a",612:"46c63de771be82e69f47",853:"ef24288f000196842a1f",1169:"ce67e3649c8d2ff3f091",1185:"025449feb78ad9d1d0e8",1239:"4f5075ac8867abcb132b",1253:"b5cf6816ffff87c3f934",1477:"52aeda4b91e0fd241256",1479:"18c8cdf396b0a87a47c7",1668:"7c27a49930b7ae16708c",1677:"eef4416e9d454ef2277b",1694:"f006fe9526e14344942b",1762:"9f0ebe896e25f54b4776",1984:"f5aa40c28ceb446808d2",2295:"9817a0460adbbcd8365b",2425:"6285dd49a110bfa217ef",2460:"da540f428c23a82e4afd",2616:"78e8ea2c03cdb4bc6fa5",2738:"b1ac2b310d15173cd626",3054:"9fcfe82a3dfa609e3bd2",3131:"cfae34bc8798fd938479",3212:"9259f4723e479a926921",3996:"010daa3b183faa6ffe29",4223:"cdb3b02bd31c59af2d81",4745:"fea1e84146c1441bceb0",4872:"719d3d2acf07a70b9173",4947:"ac97e23bfa04c897a83d",4965:"6f6786e83f41a3f5c58a",5017:"9948c93108499aa3ae3e",5161:"08296fe2616d1b13a48a",5164:"f35b5409c81c6f6cc6e3",5240:"78a67fc00ae11c7924d1",5294:"f7ae3263fdb1d93e4c4e",5306:"c91e474003dde3f44aa5",5421:"ff16b79bb5910c056302",5493:"cfd92e93f5eb32f3e70a",5618:"8084976f07044706826b",5786:"ef637dbe77c7fd0e0dc2",6213:"18b04246309763d83e9f",6273:"1fde285b26e44cda693d",6346:"f14a16e7896662f4c5c8",6354:"49a9b8be98e868bc3907",6406:"d0c079fa7eed60df7e35",6464:"707ecec3e8b969a299f1",6652:"6535e5ade082b250ff61",6689:"c22674b156ff3eab0fbe",6798:"682c16d7affc56c0e785",7046:"d032d1f5c381fd625eb5",7105:"4c4155541599633da33c",7145:"26733ba2ad0e1b6e3df3",7200:"689b1c34a82b3006c0e1",7284:"a194a487f5249f7501ef",7662:"979c76db5c325a0edcf2",8096:"ad9260cac523044ed57e",8141:"14f4b6bdeb1111f68614",8480:"cd4fe4610720bbed72f4",8628:"87737036bd95b18ade0b",8643:"808f181f88e987ecb79b",8729:"45b72b47899b422e07d4",8883:"3d1e3fe307d18e059b16",8967:"ab822f47a77c51b9ba74",9008:"a0ea1ff28df1c4184ba3",9174:"e4ceffab159b061d1e39",9305:"3cd92dff72d59cae4c70",9509:"4424f8ad33ae5f7e5771",9620:"89e9f0bab436d4325014",9622:"d435376c32f48b1fbda9",9648:"e6f35a3dfec25879e781"}[t]+".js",a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),a.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.j=6040,a.p="/King-War/",(()=>{var t={6040:1};a.f.i=(e,i)=>{t[e]||importScripts(a.p+a.u(e))};var e=self.webpackChunkking_war=self.webpackChunkking_war||[],i=e.push.bind(e);e.push=e=>{var[s,r,n]=e;for(var o in r)a.o(r,o)&&(a.m[o]=r[o]);for(n&&n(a);s.length;)t[s.pop()]=1;i(e)}})(),a.nc=void 0,s=a.x,a.x=()=>a.e(8096).then(s),a.x()})();